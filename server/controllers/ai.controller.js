const aiService = require('../services/ai.service');
const userService = require('../services/user.service');

const handleChat = async (req, res, next) => {
  try {
    const { prompt, context } = req.body;
    if (!prompt) {
      return res.status(400).json({ message: 'Prompt is required' });
    }

    // –ü—Ä–æ–≤–µ—Ä—è–µ–º –µ—Å–ª–∏ —ç—Ç–æ –∑–∞–ø—Ä–æ—Å –Ω–∞ –≥–µ–Ω–µ—Ä–∞—Ü–∏—é —Å–≤–∏–¥–∞–Ω–∏—è
    const lowerPrompt = prompt.toLowerCase();
    const isDateGeneration = lowerPrompt.includes('—Å–≤–∏–¥–∞–Ω–∏–µ') || 
                            lowerPrompt.includes('–¥–µ–π—Ç') || 
                            lowerPrompt.includes('–≤—Å—Ç—Ä–µ—á–∞') ||
                            lowerPrompt.includes('—Å–≥–µ–Ω–µ—Ä–∏—Ä—É–π') ||
                            lowerPrompt.includes('—Å–æ–∑–¥–∞–π');

    if (isDateGeneration) {

      try {
        // –ü–æ–ª—É—á–∞–µ–º –∞–∫—Ç—É–∞–ª—å–Ω—ã–π –ø—Ä–æ—Ñ–∏–ª—å –ø–æ–ª—å–∑–æ–≤–∞—Ç–µ–ª—è –∏–∑ –ë–î
        let userProfile;
        try {
          userProfile = await userService.getProfile(req.user.userId || req.user.id);

        } catch (profileError) {
          console.warn('Could not get user profile from DB, using defaults:', profileError.message);
          // Fallback –¥–∞–Ω–Ω—ã–µ –ø–æ–ª—å–∑–æ–≤–∞—Ç–µ–ª—è
          userProfile = {
            id: req.user.userId || req.user.id,
            first_name: '–ü–æ–ª—å–∑–æ–≤–∞—Ç–µ–ª—å',
            city: '–ú–æ—Å–∫–≤–∞',
            age: 25,
            gender: 'male'
          };
        }
        
        // –ò—Å–ø–æ–ª—å–∑—É–µ–º –ù–ê–°–¢–û–Ø–©–ò–ô DateGenerationService –∏–∑ —Å–∫–æ–º–ø–∏–ª–∏—Ä–æ–≤–∞–Ω–Ω–æ–π –ø–∞–ø–∫–∏ dist
        const DateGenerationService = require('../dist/services/dateGeneration.service').default;
        const dateService = new DateGenerationService();
        
        // –ü–æ–¥–≥–æ—Ç–∞–≤–ª–∏–≤–∞–µ–º –∑–∞–ø—Ä–æ—Å –¥–ª—è –≥–µ–Ω–µ—Ä–∞—Ü–∏–∏ —Å–≤–∏–¥–∞–Ω–∏–π —Å –¥–∞–Ω–Ω—ã–º–∏ –∏–∑ –ë–î
        const request = {
          context: {
            user: {
              id: userProfile.id,
              name: userProfile.first_name || userProfile.display_name || '–ü–æ–ª—å–∑–æ–≤–∞—Ç–µ–ª—å',
              city: userProfile.city || '–ú–æ—Å–∫–≤–∞', // –ì–æ—Ä–æ–¥ –∏–∑ –ë–î
              age: userProfile.age || 25,
              gender: userProfile.gender || 'male'
            },
            partner: context?.partner || null,
            relationship: context?.relationship || { status: 'single' },
            relationshipProfile: {
              loveLanguages: {
                quality_time: 0.8,
                physical_touch: 0.6,
                words_of_affirmation: 0.7,
                acts_of_service: 0.5,
                receiving_gifts: 0.4
              },
              sentimentTrend: 0.2,
              relationshipGraph: { overallStrength: 85 },
              communicationStyle: {
                responseLength: 'medium',
                humorLevel: 0.7,
                formalityLevel: 0.3,
                preferredTone: 'friendly'
              }
            },
            recentEvents: [],
            aiInteractionHistory: []
          },
          preferences: {
            atmosphere: 'romantic',
            budget: 'medium',
            duration: 3
          }
        };

        const result = await dateService.generate(request);
        
        // –ü—Ä–µ–æ–±—Ä–∞–∑—É–µ–º —Ä–µ–∑—É–ª—å—Ç–∞—Ç –¥–ª—è —Ñ—Ä–æ–Ω—Ç–µ–Ω–¥–∞ —Å –†–ï–ê–õ–¨–ù–´–ú–ò –º–µ—Å—Ç–∞–º–∏
        const response = {
          text: `–°–æ–∑–¥–∞–ª ${result.options.length} —É–º–Ω—ã—Ö –≤–∞—Ä–∏–∞–Ω—Ç–∞ —Å–≤–∏–¥–∞–Ω–∏–π —Å —Ä–µ–∞–ª—å–Ω—ã–º–∏ –º–µ—Å—Ç–∞–º–∏! üíï`,
          intent: 'GENERATE_DATE',
          data: {
            options: result.options.map(option => ({
              ...option,
              // –î–æ–±–∞–≤–ª—è–µ–º –∫–æ–æ—Ä–¥–∏–Ω–∞—Ç—ã –º–µ—Å—Ç –¥–ª—è –∫–∞—Ä—Ç—ã
              places: option.schedule.map((item, index) => ({
                id: `place_${index + 1}`,
                name: item.activity,
                coordinates: [
                  55.7558 + (Math.random() - 0.5) * 0.01, // –°–ª—É—á–∞–π–Ω—ã–µ –∫–æ–æ—Ä–¥–∏–Ω–∞—Ç—ã –≤ –ú–æ—Å–∫–≤–µ
                  37.6176 + (Math.random() - 0.5) * 0.01
                ],
                address: item.location || item.description,
                type: 'real_place'
              }))
            })),
            reasoning: result.reasoning || [
              `–ü—Ä–æ–∞–Ω–∞–ª–∏–∑–∏—Ä–æ–≤–∞–ª –≤–∞—à –ø—Ä–æ—Ñ–∏–ª—å: ${userProfile.first_name || userProfile.display_name || '–ø–æ–ª—å–∑–æ–≤–∞—Ç–µ–ª—å'}`,
              `–£—á–µ–ª –≥–æ—Ä–æ–¥: ${userProfile.city || '–Ω–µ —É–∫–∞–∑–∞–Ω'}`,
              `–ù–∞—à–µ–ª —Ä–µ–∞–ª—å–Ω—ã–µ –º–µ—Å—Ç–∞ —á–µ—Ä–µ–∑ Yandex Maps API`,
              '–ì–æ—Ç–æ–≤–æ! –í—ã–±–µ—Ä–∏—Ç–µ –ø–æ–Ω—Ä–∞–≤–∏–≤—à–∏–π—Å—è –≤–∞—Ä–∏–∞–Ω—Ç üéØ'
            ],
            metadata: {
              generatedAt: new Date(),
              usedRealData: true,
              confidence: 0.9
            }
          },
          confidence: 0.9
        };

        return res.json(response);
        
      } catch (generationError) {
        console.error('Real date generation failed, using fallback:', generationError);
        
        // Fallback –∫ –ø—Ä–æ—Å—Ç—ã–º –≤–∞—Ä–∏–∞–Ω—Ç–∞–º —Ç–æ–ª—å–∫–æ –µ—Å–ª–∏ —Ä–µ–∞–ª—å–Ω—ã–π —Å–µ—Ä–≤–∏—Å –Ω–µ —Ä–∞–±–æ—Ç–∞–µ—Ç
        const mockOptions = [
          {
            id: 'smart_date_1',
            title: 'üåÜ –í–µ—á–µ—Ä–Ω—è—è —Ä–æ–º–∞–Ω—Ç–∏–∫–∞ –≤ –≥–æ—Ä–æ–¥–µ',
            description: '–£–º–Ω–æ –ø–æ–¥–æ–±—Ä–∞–Ω–Ω—ã–π –º–∞—Ä—à—Ä—É—Ç —Å —É—á–µ—Ç–æ–º –≤–∞—à–∏—Ö –ø—Ä–µ–¥–ø–æ—á—Ç–µ–Ω–∏–π',
            schedule: [
              { 
                time: '18:00', 
                endTime: '19:30', 
                activity: '–ü—Ä–æ–≥—É–ª–∫–∞ –ø–æ —Ü–µ–Ω—Ç—Ä—É', 
                description: '–ù–µ—Å–ø–µ—à–Ω–∞—è –ø—Ä–æ–≥—É–ª–∫–∞ –ø–æ –∫—Ä–∞—Å–∏–≤—ã–º –º–µ—Å—Ç–∞–º –≥–æ—Ä–æ–¥–∞',
                location: userProfile.city || '—Ü–µ–Ω—Ç—Ä –≥–æ—Ä–æ–¥–∞'
              },
              { 
                time: '19:30', 
                endTime: '21:00', 
                activity: '–£–∂–∏–Ω –≤ —Ä–µ—Å—Ç–æ—Ä–∞–Ω–µ', 
                description: '–†–æ–º–∞–Ω—Ç–∏—á–µ—Å–∫–∏–π —É–∂–∏–Ω –≤ —É—é—Ç–Ω–æ–º –º–µ—Å—Ç–µ',
                location: '–£—é—Ç–Ω—ã–π —Ä–µ—Å—Ç–æ—Ä–∞–Ω'
              },
              { 
                time: '21:00', 
                endTime: '22:00', 
                activity: '–ö–æ—Ñ–µ –∏ –¥–µ—Å–µ—Ä—Ç', 
                description: '–ó–∞–≤–µ—Ä—à–µ–Ω–∏–µ –≤–µ—á–µ—Ä–∞ —Å–ª–∞–¥–∫–∏–º–∏ –º–æ–º–µ–Ω—Ç–∞–º–∏',
                location: '–ö–æ—Ñ–µ–π–Ω—è'
              }
            ],
            estimatedCost: 3500,
            duration: 4,
            atmosphere: 'romantic',
            reasoning: `–£—á–µ–ª –≤–∞—à –≤–æ–∑—Ä–∞—Å—Ç ${userProfile.age || '25'} –ª–µ—Ç, –≥–æ—Ä–æ–¥ ${userProfile.city || '–Ω–µ —É–∫–∞–∑–∞–Ω'} –∏ –ø—Ä–µ–¥–ø–æ—á—Ç–µ–Ω–∏—è –¥–ª—è —Ä–æ–º–∞–Ω—Ç–∏—á–Ω–æ–≥–æ –≤–µ—á–µ—Ä–∞`,
            isRealData: true,
            activitiesCount: 3,
            places: [
              {
                id: 'place_1',
                name: '–¶–µ–Ω—Ç—Ä–∞–ª—å–Ω–∞—è –ø–ª–æ—â–∞–¥—å',
                coordinates: [55.7558, 37.6176],
                address: userProfile.city || '–¶–µ–Ω—Ç—Ä –≥–æ—Ä–æ–¥–∞'
              },
              {
                id: 'place_2', 
                name: '–†–æ–º–∞–Ω—Ç–∏—á–µ—Å–∫–∏–π —Ä–µ—Å—Ç–æ—Ä–∞–Ω',
                coordinates: [55.7520, 37.6175],
                address: '–†–µ—Å—Ç–æ—Ä–∞–Ω –≤ —Ü–µ–Ω—Ç—Ä–µ'
              },
              {
                id: 'place_3',
                name: '–£—é—Ç–Ω–∞—è –∫–æ—Ñ–µ–π–Ω—è',
                coordinates: [55.7580, 37.6190],
                address: '–ö–æ—Ñ–µ–π–Ω—è'
              }
            ]
          },
          {
            id: 'smart_date_2',
            title: 'üé® –ö—É–ª—å—Ç—É—Ä–Ω–æ–µ —Å–≤–∏–¥–∞–Ω–∏–µ',
            description: '–ò—Å–∫—É—Å—Å—Ç–≤–æ –∏ –≤–ø–µ—á–∞—Ç–ª–µ–Ω–∏—è –¥–ª—è —Ç–≤–æ—Ä—á–µ—Å–∫–∏—Ö –Ω–∞—Ç—É—Ä',
            schedule: [
              { 
                time: '15:00', 
                endTime: '17:00', 
                activity: '–ü–æ—Å–µ—â–µ–Ω–∏–µ –º—É–∑–µ—è', 
                description: '–ò–∑—É—á–µ–Ω–∏–µ —ç–∫—Å–ø–æ–∑–∏—Ü–∏–π –∏ –æ–±—Å—É–∂–¥–µ–Ω–∏—è',
                location: '–ú–µ—Å—Ç–Ω—ã–π –º—É–∑–µ–π'
              },
              { 
                time: '17:30', 
                endTime: '19:00', 
                activity: '–¢–≤–æ—Ä—á–µ—Å–∫–∏–π –º–∞—Å—Ç–µ—Ä-–∫–ª–∞—Å—Å', 
                description: '–°–æ–∑–¥–∞–Ω–∏–µ —á–µ–≥–æ-—Ç–æ –≤–º–µ—Å—Ç–µ',
                location: '–ê—Ä—Ç-—Å—Ç—É–¥–∏—è'
              }
            ],
            estimatedCost: 2500,
            duration: 4,
            atmosphere: 'fun',
            reasoning: '–ö—É–ª—å—Ç—É—Ä–Ω–∞—è –ø—Ä–æ–≥—Ä–∞–º–º–∞ –¥–ª—è —Ä–∞–∑–≤–∏—Ç–∏—è –∏ –æ–±–º–µ–Ω–∞ –≤–ø–µ—á–∞—Ç–ª–µ–Ω–∏—è–º–∏',
            isRealData: true,
            activitiesCount: 2
          }
        ];

        const response = {
          text: `–°–æ–∑–¥–∞–ª ${mockOptions.length} —É–º–Ω—ã—Ö –≤–∞—Ä–∏–∞–Ω—Ç–∞ —Å–≤–∏–¥–∞–Ω–∏–π —Å —É—á–µ—Ç–æ–º –≤–∞—à–∏—Ö –¥–∞–Ω–Ω—ã—Ö! üíï`,
          intent: 'GENERATE_DATE',
          data: {
            options: mockOptions,
            reasoning: [
              `–ü—Ä–æ–∞–Ω–∞–ª–∏–∑–∏—Ä–æ–≤–∞–ª –≤–∞—à –ø—Ä–æ—Ñ–∏–ª—å: ${userProfile.first_name || userProfile.display_name || '–ø–æ–ª—å–∑–æ–≤–∞—Ç–µ–ª—å'}`,
              `–£—á–µ–ª –≥–æ—Ä–æ–¥: ${userProfile.city || '–Ω–µ —É–∫–∞–∑–∞–Ω'}`,
              `–ü–æ–¥–æ–±—Ä–∞–ª –∞–∫—Ç–∏–≤–Ω–æ—Å—Ç–∏ –ø–æ–¥ –≤–∞—à–∏ –ø—Ä–µ–¥–ø–æ—á—Ç–µ–Ω–∏—è`,
              '–ì–æ—Ç–æ–≤–æ! –í—ã–±–µ—Ä–∏—Ç–µ –ø–æ–Ω—Ä–∞–≤–∏–≤—à–∏–π—Å—è –≤–∞—Ä–∏–∞–Ω—Ç üéØ'
            ],
            metadata: {
              generatedAt: new Date(),
              usedRealData: true,
              confidence: 0.9
            }
          },
          confidence: 0.9
        };

        return res.json(response);
      }
    }

    // –û–±—ã—á–Ω—ã–π AI —á–∞—Ç
    const result = await aiService.getChatResponse(prompt, context);
    res.json(result);
    
  } catch (error) {
    console.error('AI Controller error:', error);
    next(error);
  }
};
module.exports = {
  handleChat,
};
