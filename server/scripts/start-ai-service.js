#!/usr/bin/env node

/**
 * –°–∫—Ä–∏–ø—Ç –¥–ª—è –∑–∞–ø—É—Å–∫–∞ AI —Å–µ—Ä–≤–∏—Å–∞ –≤ —Ñ–æ–Ω–µ
 * –ò—Å–ø–æ–ª—å–∑—É–µ—Ç PM2 –∏–ª–∏ –ø—Ä–æ—Å—Ç–æ–π spawn –¥–ª—è –∑–∞–ø—É—Å–∫–∞ Python AI
 */

const { spawn } = require('child_process');
const path = require('path');
const fs = require('fs');

console.log('üöÄ –ó–∞–ø—É—Å–∫–∞–µ–º AI —Å–µ—Ä–≤–∏—Å –¥–ª—è LoveMemory...');

const aiDir = path.join(__dirname, '../../ai');
const logDir = path.join(__dirname, '../logs');

// –°–æ–∑–¥–∞–µ–º –ø–∞–ø–∫—É –ª–æ–≥–æ–≤ –µ—Å–ª–∏ –µ—ë –Ω–µ—Ç
if (!fs.existsSync(logDir)) {
  fs.mkdirSync(logDir, { recursive: true });
}

// –ü—Ä–æ–≤–µ—Ä—è–µ–º –Ω–∞–ª–∏—á–∏–µ AI —Ñ–∞–π–ª–æ–≤
const aiFiles = [
  'ultimate_ai_service.py',
  'content_recommender.py', 
  'collaborative_filtering.py'
];

for (const file of aiFiles) {
  const filePath = path.join(aiDir, file);
  if (!fs.existsSync(filePath)) {
    console.error(`‚ùå –ù–µ –Ω–∞–π–¥–µ–Ω AI —Ñ–∞–π–ª: ${file}`);
    process.exit(1);
  }
}

console.log('‚úÖ AI —Ñ–∞–π–ª—ã –Ω–∞–π–¥–µ–Ω—ã');

// –ó–∞–ø—É—Å–∫–∞–µ–º AI —Å–µ—Ä–≤–∏—Å
const pythonProcess = spawn('python', ['ultimate_ai_service.py'], {
  cwd: aiDir,
  stdio: ['pipe', 'pipe', 'pipe'],
  env: { 
    ...process.env, 
    PYTHONPATH: aiDir,
    PYTHONUNBUFFERED: '1' // –î–ª—è –ø–æ–ª—É—á–µ–Ω–∏—è –ª–æ–≥–æ–≤ –≤ —Ä–µ–∞–ª—å–Ω–æ–º –≤—Ä–µ–º–µ–Ω–∏
  }
});

let isStarted = false;

pythonProcess.stdout.on('data', (data) => {
  const output = data.toString();
  console.log('ü§ñ AI:', output.trim());
  
  // –û–ø—Ä–µ–¥–µ–ª—è–µ–º –∫–æ–≥–¥–∞ —Å–µ—Ä–≤–∏—Å –≥–æ—Ç–æ–≤
  if (output.includes('Uvicorn running') || output.includes('Application startup complete')) {
    if (!isStarted) {
      console.log('‚úÖ AI —Å–µ—Ä–≤–∏—Å –∑–∞–ø—É—â–µ–Ω –∏ –≥–æ—Ç–æ–≤ –∫ —Ä–∞–±–æ—Ç–µ!');
      console.log('üîó API –¥–æ—Å—Ç—É–ø–µ–Ω –Ω–∞: http://localhost:8000');
      console.log('üìñ –î–æ–∫—É–º–µ–Ω—Ç–∞—Ü–∏—è: http://localhost:8000/docs');
      isStarted = true;
    }
  }
});

pythonProcess.stderr.on('data', (data) => {
  const error = data.toString();
  console.error('‚ùå AI Error:', error.trim());
});

pythonProcess.on('close', (code) => {
  console.log(`üõë AI —Å–µ—Ä–≤–∏—Å –∑–∞–≤–µ—Ä—à–µ–Ω —Å –∫–æ–¥–æ–º: ${code}`);
  if (code !== 0) {
    console.error('‚ùå AI —Å–µ—Ä–≤–∏—Å –∑–∞–≤–µ—Ä—à–∏–ª—Å—è —Å –æ—à–∏–±–∫–æ–π');
    process.exit(1);
  }
});

// Graceful shutdown
process.on('SIGINT', () => {
  console.log('\nüõë –ü–æ–ª—É—á–µ–Ω —Å–∏–≥–Ω–∞–ª –∑–∞–≤–µ—Ä—à–µ–Ω–∏—è, –æ—Å—Ç–∞–Ω–∞–≤–ª–∏–≤–∞–µ–º AI —Å–µ—Ä–≤–∏—Å...');
  pythonProcess.kill('SIGTERM');
  setTimeout(() => {
    pythonProcess.kill('SIGKILL');
    process.exit(0);
  }, 5000);
});

process.on('SIGTERM', () => {
  console.log('\nüõë –ü–æ–ª—É—á–µ–Ω —Å–∏–≥–Ω–∞–ª SIGTERM, –æ—Å—Ç–∞–Ω–∞–≤–ª–∏–≤–∞–µ–º AI —Å–µ—Ä–≤–∏—Å...');
  pythonProcess.kill('SIGTERM');
});

console.log('‚è≥ –ñ–¥–µ–º –∑–∞–ø—É—Å–∫–∞ AI —Å–µ—Ä–≤–∏—Å–∞...');
console.log('üí° –î–ª—è –æ—Å—Ç–∞–Ω–æ–≤–∫–∏ –∏—Å–ø–æ–ª—å–∑—É–π—Ç–µ Ctrl+C');

// Timeout –¥–ª—è –ø—Ä–æ–≤–µ—Ä–∫–∏ –∑–∞–ø—É—Å–∫–∞
setTimeout(() => {
  if (!isStarted) {
    console.warn('‚ö†Ô∏è  AI —Å–µ—Ä–≤–∏—Å –∑–∞–ø—É—Å–∫–∞–µ—Ç—Å—è –¥–æ–ª—å—à–µ –æ–±—ã—á–Ω–æ–≥–æ...');
    console.log('üîç –ü—Ä–æ–≤–µ—Ä—å—Ç–µ –ª–æ–≥–∏ –≤—ã—à–µ –Ω–∞ –Ω–∞–ª–∏—á–∏–µ –æ—à–∏–±–æ–∫');
  }
}, 30000); // 30 —Å–µ–∫—É–Ω–¥
