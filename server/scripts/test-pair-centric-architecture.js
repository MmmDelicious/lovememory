#!/usr/bin/env node

/**
 * –ö–æ–º–ø–ª–µ–∫—Å–Ω—ã–π —Ç–µ—Å—Ç –Ω–æ–≤–æ–π pair-centric –∞—Ä—Ö–∏—Ç–µ–∫—Ç—É—Ä—ã
 * –ü—Ä–æ–≤–µ—Ä—è–µ—Ç –≤—Å–µ –æ—Å–Ω–æ–≤–Ω—ã–µ –∏–∑–º–µ–Ω–µ–Ω–∏—è –∏ —Ñ—É–Ω–∫—Ü–∏–æ–Ω–∞–ª—å–Ω–æ—Å—Ç—å
 */

const { Sequelize, Op } = require('sequelize');
const models = require('../models');

const {
  User, Pair, UserPair, Event, Media, GameRoom, GameParticipant,
  Gift, ShopItem, Transaction, Consent, Insight, NotificationToken,
  UserLessonProgress, ActivityLog
} = models;

console.log('üöÄ –ó–∞–ø—É—Å–∫ –∫–æ–º–ø–ª–µ–∫—Å–Ω–æ–≥–æ —Ç–µ—Å—Ç–∞ pair-centric –∞—Ä—Ö–∏—Ç–µ–∫—Ç—É—Ä—ã...\n');

async function runTests() {
  let testUser, testUser2, testPair, testEvent, testLesson; // –û–±—ä—è–≤–ª—è–µ–º –ø–µ—Ä–µ–º–µ–Ω–Ω—ã–µ –¥–ª—è –∏—Å–ø–æ–ª—å–∑–æ–≤–∞–Ω–∏—è –≤ –æ—á–∏—Å—Ç–∫–µ
  
  try {
    // ===== –¢–ï–°–¢ 1: –ü—Ä–æ–≤–µ—Ä–∫–∞ –Ω–æ–≤—ã—Ö –ø–æ–ª–µ–π –≤ User =====
    console.log('üìã –¢–ï–°–¢ 1: –ü—Ä–æ–≤–µ—Ä–∫–∞ –Ω–æ–≤—ã—Ö –ø–æ–ª–µ–π –≤ User');
    testUser = await User.create({
      first_name: '–¢–µ—Å—Ç–æ–≤—ã–π',
      email: `test-${Date.now()}@example.com`,
      display_name: '–¢–µ—Å—Ç–æ–≤—ã–π –ü–æ–ª—å–∑–æ–≤–∞—Ç–µ–ª—å',
      locale: 'ru',
      email_verified: true
    });
    
    console.log(`‚úÖ –°–æ–∑–¥–∞–Ω –ø–æ–ª—å–∑–æ–≤–∞—Ç–µ–ª—å —Å –Ω–æ–≤—ã–º–∏ –ø–æ–ª—è–º–∏:`);
    console.log(`   - display_name: ${testUser.display_name}`);
    console.log(`   - locale: ${testUser.locale}`);
    console.log(`   - email_verified: ${testUser.email_verified}\n`);

    // ===== –¢–ï–°–¢ 2: –°–æ–∑–¥–∞–Ω–∏–µ –≤—Ç–æ—Ä–æ–≥–æ –ø–æ–ª—å–∑–æ–≤–∞—Ç–µ–ª—è =====
    console.log('üìã –¢–ï–°–¢ 2: –°–æ–∑–¥–∞–Ω–∏–µ –≤—Ç–æ—Ä–æ–≥–æ –ø–æ–ª—å–∑–æ–≤–∞—Ç–µ–ª—è');
    testUser2 = await User.create({
      first_name: '–ü–∞—Ä—Ç–Ω–µ—Ä',
      email: `partner-${Date.now()}@example.com`,
      display_name: '–¢–µ—Å—Ç–æ–≤—ã–π –ü–∞—Ä—Ç–Ω–µ—Ä',
      locale: 'ru',
      email_verified: false
    });
    
    console.log(`‚úÖ –°–æ–∑–¥–∞–Ω –≤—Ç–æ—Ä–æ–π –ø–æ–ª—å–∑–æ–≤–∞—Ç–µ–ª—å: ${testUser2.display_name}\n`);

    // ===== –¢–ï–°–¢ 3: –°–æ–∑–¥–∞–Ω–∏–µ –ø–∞—Ä—ã –∏ UserPair —Å–≤—è–∑–∏ =====
    console.log('üìã –¢–ï–°–¢ 3: –°–æ–∑–¥–∞–Ω–∏–µ –ø–∞—Ä—ã –∏ UserPair —Å–≤—è–∑–∏');
    testPair = await Pair.create({
      user1Id: testUser.id,  // –î–ª—è –æ–±—Ä–∞—Ç–Ω–æ–π —Å–æ–≤–º–µ—Å—Ç–∏–º–æ—Å—Ç–∏
      user2Id: testUser2.id, // –î–ª—è –æ–±—Ä–∞—Ç–Ω–æ–π —Å–æ–≤–º–µ—Å—Ç–∏–º–æ—Å—Ç–∏
      name: '–¢–µ—Å—Ç–æ–≤–∞—è –ø–∞—Ä–∞',
      harmony_index: 75,
      metadata: { test: true, created_by_test: 'pair-centric-test' }
    });

    const userPair1 = await UserPair.create({
      user_id: testUser.id,
      pair_id: testPair.id,
      role: 'admin',
      accepted: true
    });

    const userPair2 = await UserPair.create({
      user_id: testUser2.id,
      pair_id: testPair.id,
      role: 'member',
      accepted: true
    });

    console.log(`‚úÖ –°–æ–∑–¥–∞–Ω–∞ –ø–∞—Ä–∞: ${testPair.name} (harmony: ${testPair.harmony_index})`);
    console.log(`‚úÖ –°–æ–∑–¥–∞–Ω–∞ —Å–≤—è–∑—å UserPair1: —Ä–æ–ª—å ${userPair1.role}, –ø—Ä–∏–Ω—è—Ç–æ: ${userPair1.accepted}`);
    console.log(`‚úÖ –°–æ–∑–¥–∞–Ω–∞ —Å–≤—è–∑—å UserPair2: —Ä–æ–ª—å ${userPair2.role}, –ø—Ä–∏–Ω—è—Ç–æ: ${userPair2.accepted}\n`);

    // ===== –¢–ï–°–¢ 4: –°–æ–±—ã—Ç–∏—è —Å pair_id –∏ creator_user_id =====
    console.log('üìã –¢–ï–°–¢ 4: –°–æ–±—ã—Ç–∏—è —Å –Ω–æ–≤—ã–º–∏ –ø–æ–ª—è–º–∏');
    testEvent = await Event.create({
      title: '–¢–µ—Å—Ç–æ–≤–æ–µ —Å–æ–±—ã—Ç–∏–µ',
      event_date: new Date(),
      userId: testUser.id,  // –ü—Ä–∞–≤–∏–ª—å–Ω–æ–µ –ø–æ–ª–µ –¥–ª—è Event –º–æ–¥–µ–ª–∏
      pair_id: testPair.id,
      creator_user_id: testUser.id,
      metadata: { event_type: 'test', automated: false }
    });

    console.log(`‚úÖ –°–æ–∑–¥–∞–Ω–æ —Å–æ–±—ã—Ç–∏–µ —Å pair_id: ${testEvent.pair_id}`);
    console.log(`‚úÖ Creator: ${testEvent.creator_user_id}\n`);

    // ===== –¢–ï–°–¢ 5: –ú–µ–¥–∏–∞ —Å –Ω–æ–≤—ã–º–∏ –ø–æ–ª—è–º–∏ =====
    console.log('üìã –¢–ï–°–¢ 5: –ú–µ–¥–∏–∞ —Å –Ω–æ–≤—ã–º–∏ –ø–æ–ª—è–º–∏');
    const testMedia = await Media.create({
      file_url: '/test-media.jpg',  // –ü—Ä–∞–≤–∏–ª—å–Ω–æ–µ –ø–æ–ª–µ –¥–ª—è Media
      eventId: testEvent.id,        // –°–≤—è–∑—å —Å —Å–æ–±—ã—Ç–∏–µ–º
      pair_id: testPair.id,
      uploaded_by: testUser.id,
      size_bytes: 1024000,
      blurhash: 'LEHV6nWB2yk8pyo0adR*.7kCMdnj',
      mime_type: 'image/jpeg'
    });

    console.log(`‚úÖ –°–æ–∑–¥–∞–Ω–∞ –º–µ–¥–∏–∞ —Å –ø–∞—Ä–æ–π: ${testMedia.pair_id}`);
    console.log(`‚úÖ –†–∞–∑–º–µ—Ä: ${testMedia.size_bytes} –±–∞–π—Ç, —Ç–∏–ø: ${testMedia.mime_type}\n`);

    // ===== –¢–ï–°–¢ 6: GameRoom —Å –Ω–æ–≤—ã–º–∏ –ø–æ–ª—è–º–∏ =====
    console.log('üìã –¢–ï–°–¢ 6: GameRoom —Å –Ω–æ–≤–æ–π —Å—Ç—Ä—É–∫—Ç—É—Ä–æ–π');
    const testGameRoom = await GameRoom.create({
      roomId: `test-room-${Date.now()}`,
      gameType: 'chess',
      hostId: testUser.id,  // –û–±—è–∑–∞—Ç–µ–ª—å–Ω–æ–µ –ø–æ–ª–µ
      pair_id: testPair.id,
      state: 'waiting',
      settings: { time_limit: 600, difficulty: 'medium' }
    });

    const gameParticipant = await GameParticipant.create({
      game_room_id: testGameRoom.id,
      user_id: testUser.id,
      is_host: true,
      stats: { games_played: 0, wins: 0 }
    });

    console.log(`‚úÖ –°–æ–∑–¥–∞–Ω–∞ –∏–≥—Ä–æ–≤–∞—è –∫–æ–º–Ω–∞—Ç–∞: ${testGameRoom.roomId}`);
    console.log(`‚úÖ –£—á–∞—Å—Ç–Ω–∏–∫ –∏–≥—Ä—ã: host=${gameParticipant.is_host}\n`);

    // ===== –¢–ï–°–¢ 6: Shop –∏ Transaction =====
    console.log('üìã –¢–ï–°–¢ 7: –ú–∞–≥–∞–∑–∏–Ω –∏ —Ç—Ä–∞–Ω–∑–∞–∫—Ü–∏–∏');
    const shopItem = await ShopItem.create({
      sku: `TEST_ITEM_${Date.now()}`,
      title: '–¢–µ—Å—Ç–æ–≤—ã–π —Ç–æ–≤–∞—Ä',
      description: '–û–ø–∏—Å–∞–Ω–∏–µ —Ç–µ—Å—Ç–æ–≤–æ–≥–æ —Ç–æ–≤–∞—Ä–∞',
      price_coins: 100,
      is_virtual: true,
      metadata: { category: 'test', rarity: 'common' }
    });

    const transaction = await Transaction.create({
      pair_id: testPair.id,
      user_id: testUser.id,
      tx_type: 'purchase',
      amount: 100,
      currency: 'coins',
      metadata: { item_id: shopItem.id, test: true }
    });

    console.log(`‚úÖ –°–æ–∑–¥–∞–Ω —Ç–æ–≤–∞—Ä: ${shopItem.title} (${shopItem.price_coins} –º–æ–Ω–µ—Ç)`);
    console.log(`‚úÖ –¢—Ä–∞–Ω–∑–∞–∫—Ü–∏—è: ${transaction.tx_type} –Ω–∞ ${transaction.amount} ${transaction.currency}\n`);

    // ===== –¢–ï–°–¢ 7: Gift —Å –Ω–æ–≤—ã–º–∏ –ø–æ–ª—è–º–∏ =====
    console.log('üìã –¢–ï–°–¢ 8: –ü–æ–¥–∞—Ä–∫–∏ —Å –Ω–æ–≤–æ–π —Å—Ç—Ä—É–∫—Ç—É—Ä–æ–π');
    const testGift = await Gift.create({
      fromUserId: testUser.id,     // –ü—Ä–∞–≤–∏–ª—å–Ω–æ–µ –ø–æ–ª–µ –¥–ª—è –æ—Ç–ø—Ä–∞–≤–∏—Ç–µ–ª—è
      toUserId: testUser2.id,      // –ü—Ä–∞–≤–∏–ª—å–Ω–æ–µ –ø–æ–ª–µ –¥–ª—è –ø–æ–ª—É—á–∞—Ç–µ–ª—è
      giftType: 'guitar',          // –û–±—è–∑–∞—Ç–µ–ª—å–Ω–æ–µ –ø–æ–ª–µ (guitar –∏–ª–∏ running-character)
      price: 100,                  // –û–±—è–∑–∞—Ç–µ–ª—å–Ω–æ–µ –ø–æ–ª–µ
      message: '–¢–µ—Å—Ç–æ–≤—ã–π –ø–æ–¥–∞—Ä–æ–∫', // –û–±—è–∑–∞—Ç–µ–ª—å–Ω–æ–µ –ø–æ–ª–µ
      recipient_pair_id: testPair.id,
      shop_item_id: shopItem.id
    });

    console.log(`‚úÖ –°–æ–∑–¥–∞–Ω –ø–æ–¥–∞—Ä–æ–∫ –¥–ª—è –ø–∞—Ä—ã: ${testGift.recipient_pair_id}`);
    console.log(`‚úÖ –°–≤—è–∑–∞–Ω —Å —Ç–æ–≤–∞—Ä–æ–º: ${testGift.shop_item_id}\n`);

    // ===== –¢–ï–°–¢ 8: –°–æ–≥–ª–∞—Å–∏—è (Consent) =====
    console.log('üìã –¢–ï–°–¢ 9: –°–∏—Å—Ç–µ–º–∞ —Å–æ–≥–ª–∞—Å–∏–π');
    const consent = await Consent.giveConsent(testUser.id, {
      analytics_opt_in: true,
      ai_opt_in: true,
      share_messages_for_analysis: false
    });

    const hasAnalyticsConsent = await Consent.hasConsent(testUser.id, 'analytics');
    const hasAiConsent = await Consent.hasConsent(testUser.id, 'ai');

    console.log(`‚úÖ –°–æ–≥–ª–∞—Å–∏–µ –Ω–∞ –∞–Ω–∞–ª–∏—Ç–∏–∫—É: ${hasAnalyticsConsent}`);
    console.log(`‚úÖ –°–æ–≥–ª–∞—Å–∏–µ –Ω–∞ –ò–ò: ${hasAiConsent}\n`);

    // ===== –¢–ï–°–¢ 9: –ò–Ω—Å–∞–π—Ç—ã =====
    console.log('üìã –¢–ï–°–¢ 10: –°–∏—Å—Ç–µ–º–∞ –∏–Ω—Å–∞–π—Ç–æ–≤');
    const compatibilityInsight = await Insight.createCompatibilityInsight(
      testPair.id, 
      85, 
      { strengths: ['communication', 'trust'], weaknesses: ['time_management'] }
    );

    const recommendation = await Insight.createRecommendation(
      testPair.id,
      '–†–µ–∫–æ–º–µ–Ω–¥—É–µ—Ç—Å—è –±–æ–ª—å—à–µ –æ–±—â–∞—Ç—å—Å—è –ø–æ –≤–µ—á–µ—Ä–∞–º',
      { frequency: 'daily', confidence: 0.8 }
    );

    console.log(`‚úÖ –ò–Ω—Å–∞–π—Ç —Å–æ–≤–º–µ—Å—Ç–∏–º–æ—Å—Ç–∏: ${compatibilityInsight.summary}`);
    console.log(`‚úÖ –†–µ–∫–æ–º–µ–Ω–¥–∞—Ü–∏—è: ${recommendation.summary}\n`);

    // ===== –¢–ï–°–¢ 10: –¢–æ–∫–µ–Ω—ã —É–≤–µ–¥–æ–º–ª–µ–Ω–∏–π =====
    console.log('üìã –¢–ï–°–¢ 11: –¢–æ–∫–µ–Ω—ã —É–≤–µ–¥–æ–º–ª–µ–Ω–∏–π');
    const firebaseToken = await NotificationToken.addToken(
      testUser.id,
      'firebase',
      'test-firebase-token-12345'
    );

    const activeTokens = await NotificationToken.getActiveTokens(testUser.id);

    console.log(`‚úÖ Firebase —Ç–æ–∫–µ–Ω –¥–æ–±–∞–≤–ª–µ–Ω: ${firebaseToken.token.substring(0, 20)}...`);
    console.log(`‚úÖ –ê–∫—Ç–∏–≤–Ω—ã—Ö —Ç–æ–∫–µ–Ω–æ–≤: ${activeTokens.length}\n`);

    // ===== –¢–ï–°–¢ 11: Lesson Progress —Å –Ω–æ–≤–æ–π —Å—Ç—Ä—É–∫—Ç—É—Ä–æ–π =====
    console.log('üìã –¢–ï–°–¢ 12: –ü—Ä–æ–≥—Ä–µ—Å—Å —É—Ä–æ–∫–æ–≤ (pair-centric)');
    // –°–Ω–∞—á–∞–ª–∞ —Å–æ–∑–¥–∞–¥–∏–º —Ç–µ—Å—Ç–æ–≤—ã–π —É—Ä–æ–∫
    testLesson = await models.Lesson.create({
      id: `test-lesson-${Date.now()}`,
      title: '–¢–µ—Å—Ç–æ–≤—ã–π —É—Ä–æ–∫',
      text: '–°–æ–¥–µ—Ä–∂–∞–Ω–∏–µ —Ç–µ—Å—Ç–æ–≤–æ–≥–æ —É—Ä–æ–∫–∞ –¥–ª—è –ø–∞—Ä—ã',  // –û–±—è–∑–∞—Ç–µ–ª—å–Ω–æ–µ –ø–æ–ª–µ
      description: '–û–ø–∏—Å–∞–Ω–∏–µ —Ç–µ—Å—Ç–æ–≤–æ–≥–æ —É—Ä–æ–∫–∞',
      theme: 'communication',
      difficulty: 'easy',
      content: { test: true },
      is_active: true
    });

    const lessonProgress = await UserLessonProgress.create({
      user_id: testUser.id,
      pair_id: testPair.id,
      completed_by_user_id: testUser.id,
      lesson_id: testLesson.id,
      coins_earned: 50,
      streak_bonus: 10,
      completion_time_seconds: 120
    });

    const pairStats = await UserLessonProgress.getPairCompletionStats(testPair.id);
    const userStreak = await UserLessonProgress.getUserStreak(testUser.id, testPair.id);

    console.log(`‚úÖ –£—Ä–æ–∫ –∑–∞–≤–µ—Ä—à–µ–Ω –ø–∞—Ä–æ–π: ${lessonProgress.pair_id}`);
    console.log(`‚úÖ –°—Ç–∞—Ç–∏—Å—Ç–∏–∫–∞ –ø–∞—Ä—ã: ${pairStats.totalCompleted} —É—Ä–æ–∫–æ–≤, ${pairStats.totalReward} –º–æ–Ω–µ—Ç`);
    console.log(`‚úÖ Streak –ø–æ–ª—å–∑–æ–≤–∞—Ç–µ–ª—è: ${userStreak}\n`);

    // ===== –¢–ï–°–¢ 12: Activity Log =====
    console.log('üìã –¢–ï–°–¢ 13: –õ–æ–≥ –∞–∫—Ç–∏–≤–Ω–æ—Å—Ç–∏');
    await ActivityLog.logEventCreated(testPair.id, testUser.id, testEvent.id, testEvent.title);
    await ActivityLog.logLessonCompleted(testPair.id, testUser.id, 'test-lesson-001', 60);
    await ActivityLog.logGameStarted(testPair.id, testUser.id, testGameRoom.id, 'chess');

    const recentActivity = await ActivityLog.findAll({
      where: { pair_id: testPair.id },
      order: [['created_at', 'DESC']],
      limit: 5
    });

    console.log(`‚úÖ –ó–∞–ø–∏—Å–µ–π –≤ –ª–æ–≥–µ –∞–∫—Ç–∏–≤–Ω–æ—Å—Ç–∏: ${recentActivity.length}`);
    recentActivity.forEach((log, i) => {
      console.log(`   ${i + 1}. ${log.action} (${log.created_at.toLocaleString()})`);
    });

    // ===== –¢–ï–°–¢ 13: –ü—Ä–æ–≤–µ—Ä–∫–∞ –∞—Å—Å–æ—Ü–∏–∞—Ü–∏–π =====
    console.log('\nüìã –¢–ï–°–¢ 14: –ü—Ä–æ–≤–µ—Ä–∫–∞ –∞—Å—Å–æ—Ü–∏–∞—Ü–∏–π');
    
    // –ó–∞–≥—Ä—É–∂–∞–µ–º –ø–∞—Ä—É —Å–æ –≤—Å–µ–º–∏ —Å–≤—è–∑–∞–Ω–Ω—ã–º–∏ –¥–∞–Ω–Ω—ã–º–∏
    const fullPair = await Pair.findByPk(testPair.id, {
      include: [
        { model: UserPair, as: 'UserPairs' },
        { model: Event, as: 'Events' },
        { model: Media, as: 'Media' },
        { model: GameRoom, as: 'GameRooms' },
        { model: Transaction, as: 'Transactions' },
        { model: Insight, as: 'Insights' },
        { model: UserLessonProgress, as: 'LessonProgress' }
      ]
    });

    console.log(`‚úÖ –ó–∞–≥—Ä—É–∂–µ–Ω–∞ –ø–∞—Ä–∞ —Å –∞—Å—Å–æ—Ü–∏–∞—Ü–∏—è–º–∏:`);
    console.log(`   - UserPairs: ${fullPair.UserPairs?.length || 0}`);
    console.log(`   - Events: ${fullPair.Events?.length || 0}`);
    console.log(`   - Media: ${fullPair.Media?.length || 0}`);
    console.log(`   - GameRooms: ${fullPair.GameRooms?.length || 0}`);
    console.log(`   - Transactions: ${fullPair.Transactions?.length || 0}`);
    console.log(`   - Insights: ${fullPair.Insights?.length || 0}`);
    console.log(`   - LessonProgress: ${fullPair.LessonProgress?.length || 0}\n`);

    // ===== –¢–ï–°–¢ 14: –ü—Ä–æ–≤–µ—Ä–∫–∞ –∏–Ω–¥–µ–∫—Å–æ–≤ –∏ –ø—Ä–æ–∏–∑–≤–æ–¥–∏—Ç–µ–ª—å–Ω–æ—Å—Ç–∏ =====
    console.log('üìã –¢–ï–°–¢ 15: –ü—Ä–æ–≤–µ—Ä–∫–∞ –∏–Ω–¥–µ–∫—Å–æ–≤');
    
    const start = Date.now();
    const eventsForPair = await Event.findAll({
      where: { pair_id: testPair.id },
      limit: 100
    });
    const queryTime = Date.now() - start;

    console.log(`‚úÖ –ó–∞–ø—Ä–æ—Å —Å–æ–±—ã—Ç–∏–π –ø–∞—Ä—ã –≤—ã–ø–æ–ª–Ω–µ–Ω –∑–∞ ${queryTime}–º—Å`);
    console.log(`‚úÖ –ù–∞–π–¥–µ–Ω–æ —Å–æ–±—ã—Ç–∏–π: ${eventsForPair.length}\n`);

    // ===== –§–ò–ù–ê–õ–¨–ù–ê–Ø –û–ß–ò–°–¢–ö–ê =====
    console.log('üßπ –û—á–∏—Å—Ç–∫–∞ —Ç–µ—Å—Ç–æ–≤—ã—Ö –¥–∞–Ω–Ω—ã—Ö...');
    
    // –£–¥–∞–ª—è–µ–º –≤ –ø—Ä–∞–≤–∏–ª—å–Ω–æ–º –ø–æ—Ä—è–¥–∫–µ (–∏–∑-–∑–∞ foreign keys)
    await ActivityLog.destroy({ where: { pair_id: testPair.id } });
    await UserLessonProgress.destroy({ where: { pair_id: testPair.id } });
    await GameParticipant.destroy({ where: { user_id: testUser.id } });
    await GameRoom.destroy({ where: { id: testGameRoom.id } });
    await Insight.destroy({ where: { pair_id: testPair.id } });
    await NotificationToken.destroy({ where: { user_id: testUser.id } });
    await Consent.destroy({ where: { user_id: testUser.id } });
    await Transaction.destroy({ where: { pair_id: testPair.id } });
    await Gift.destroy({ where: { fromUserId: testUser.id } });
    await Media.destroy({ where: { eventId: testEvent.id } });
    await Event.destroy({ where: { userId: testUser.id } });
    await UserPair.destroy({ where: { user_id: testUser.id } });
    await UserPair.destroy({ where: { user_id: testUser2.id } });
    await Pair.destroy({ where: { id: testPair.id } });
    await ShopItem.destroy({ where: { id: shopItem.id } });
    await models.Lesson.destroy({ where: { id: testLesson.id } });
    await User.destroy({ where: { id: testUser.id } });
    await User.destroy({ where: { id: testUser2.id } });

    console.log('‚úÖ –¢–µ—Å—Ç–æ–≤—ã–µ –¥–∞–Ω–Ω—ã–µ —É–¥–∞–ª–µ–Ω—ã\n');

    // ===== –†–ï–ó–£–õ–¨–¢–ê–¢–´ =====
    console.log('üéâ –í–°–ï –¢–ï–°–¢–´ –ü–†–û–ô–î–ï–ù–´ –£–°–ü–ï–®–ù–û!');
    console.log('\nüìä –ü—Ä–æ–≤–µ—Ä–µ–Ω–Ω—ã–µ –∫–æ–º–ø–æ–Ω–µ–Ω—Ç—ã:');
    console.log('‚úÖ –ù–æ–≤—ã–µ –ø–æ–ª—è –≤ User (display_name, locale, email_verified)');
    console.log('‚úÖ –¢–∞–±–ª–∏—Ü–∞ UserPair –∏ —Å–≤—è–∑–∏ many-to-many');
    console.log('‚úÖ Pair-centric –ø–æ–ª—è –≤ Event, Media, GameRoom');
    console.log('‚úÖ –ù–æ–≤—ã–µ —Ç–∞–±–ª–∏—Ü—ã: GameParticipant, ShopItem, Transaction');
    console.log('‚úÖ ML-—Ç–∞–±–ª–∏—Ü—ã: Consent, Insight, NotificationToken');
    console.log('‚úÖ –û–±–Ω–æ–≤–ª–µ–Ω–Ω—ã–π UserLessonProgress —Å pair_id');
    console.log('‚úÖ ActivityLog –¥–ª—è event bus –∞—Ä—Ö–∏—Ç–µ–∫—Ç—É—Ä—ã');
    console.log('‚úÖ –í—Å–µ –∞—Å—Å–æ—Ü–∏–∞—Ü–∏–∏ —Ä–∞–±–æ—Ç–∞—é—Ç –∫–æ—Ä—Ä–µ–∫—Ç–Ω–æ');
    console.log('‚úÖ –ò–Ω–¥–µ–∫—Å—ã –∏ –ø—Ä–æ–∏–∑–≤–æ–¥–∏—Ç–µ–ª—å–Ω–æ—Å—Ç—å –≤ –Ω–æ—Ä–º–µ');
    
    console.log('\nüöÄ –ê—Ä—Ö–∏—Ç–µ–∫—Ç—É—Ä–∞ –≥–æ—Ç–æ–≤–∞ –∫ –ø—Ä–æ–¥–∞–∫—à–µ–Ω—É!');

  } catch (error) {
    console.error('‚ùå –û—à–∏–±–∫–∞ –≤ —Ç–µ—Å—Ç–∞—Ö:', error);
    console.error('Stack trace:', error.stack);
    process.exit(1);
  }
}

// –ó–∞–ø—É—Å–∫ —Ç–µ—Å—Ç–æ–≤
runTests()
  .then(() => {
    console.log('\n‚ú® –¢–µ—Å—Ç–∏—Ä–æ–≤–∞–Ω–∏–µ –∑–∞–≤–µ—Ä—à–µ–Ω–æ');
    process.exit(0);
  })
  .catch(error => {
    console.error('üí• –ö—Ä–∏—Ç–∏—á–µ—Å–∫–∞—è –æ—à–∏–±–∫–∞:', error);
    process.exit(1);
  });
