const axios = require('axios');

const buildSystemPrompt = (context) => {
  if (!context) {
    console.error('Context is undefined in buildSystemPrompt');
    throw new Error('Context is required for buildSystemPrompt');
  }

  const { user, partner, relationship } = context;

  if (!user) {
    console.error('User is undefined in buildSystemPrompt context');
    throw new Error('User is required in context');
  }

  // –û–ø—Ä–µ–¥–µ–ª—è–µ–º –∫–∞–∫ –æ–±—Ä–∞—â–∞—Ç—å—Å—è –∫ –ø–æ–ª—å–∑–æ–≤–∞—Ç–µ–ª—é
  const userName = user?.name || user?.full_name || '–¥—Ä—É–≥';
  let userAddress = '';
  if (user?.gender === 'male') {
    userAddress = `–û–±—Ä–∞—â–∞–π—Å—è –∫ –Ω–µ–º—É –ø–æ –∏–º–µ–Ω–∏, –º–æ–∂–Ω–æ –ø–æ-–ø—Ä–æ—Å—Ç–æ–º—É –∏ –ø–æ-–¥—Ä—É–∂–µ—Å–∫–∏. –ù–∞–ø—Ä–∏–º–µ—Ä, ¬´–ü—Ä–∏–≤–µ—Ç, ${userName}¬ª –∏–ª–∏ ¬´${userName}, —Å–ª—É—à–∞–π¬ª.`;
  } else if (user?.gender === 'female') {
    userAddress = `–û–±—Ä–∞—â–∞–π—Å—è –∫ –Ω–µ–π –ø–æ –∏–º–µ–Ω–∏, –ø–æ-–¥—Ä—É–∂–µ—Å–∫–∏. –ù–∞–ø—Ä–∏–º–µ—Ä, ¬´${userName}, –ø—Ä–∏–≤–µ—Ç!¬ª –∏–ª–∏ ¬´–°–ª—É—à–∞–π, ${userName}¬ª.`;
  } else {
    userAddress = `–û–±—Ä–∞—â–∞–π—Å—è –ø–æ –∏–º–µ–Ω–∏ –¥—Ä—É–∂–µ–ª—é–±–Ω–æ: ¬´${userName}¬ª –∏–ª–∏ ¬´–ü—Ä–∏–≤–µ—Ç, ${userName}¬ª.`;
  }

  // –û—Å–Ω–æ–≤–Ω–æ–π –ø—Ä–æ–º–ø—Ç
  let prompt = `–¢—ã ‚Äî –°–ø–∞—Ä–∫–∏, –º—É–¥—Ä—ã–π –∏ –≤–µ—Å–µ–ª—ã–π –ø–æ–º–æ—â–Ω–∏–∫ –≤ –æ—Ç–Ω–æ—à–µ–Ω–∏—è—Ö!

### –û –ø–æ–ª—å–∑–æ–≤–∞—Ç–µ–ª–µ:
**–ò–º—è:** ${userName}
**–í–æ–∑—Ä–∞—Å—Ç:** ${user.age ? `${user.age} –ª–µ—Ç` : '–Ω–µ —É–∫–∞–∑–∞–Ω'}
**–ì–æ—Ä–æ–¥:** ${user.city || '–Ω–µ —É–∫–∞–∑–∞–Ω'}
**–ú–æ–Ω–µ—Ç—ã:** ${user.coins || 0} –º–æ–Ω–µ—Ç
**–ö–∞–∫ –æ–±—Ä–∞—â–∞—Ç—å—Å—è:** ${userAddress}

### –°—Ç–∞—Ç—É—Å –æ—Ç–Ω–æ—à–µ–Ω–∏–π:`;

  if (partner && relationship?.status === 'active') {
    const partnerName = partner?.name || partner?.full_name || '–ø–∞—Ä—Ç–Ω–µ—Ä';
    const relationshipDays = relationship?.duration || 0;
    
    prompt += `
**–°—Ç–∞—Ç—É—Å:** ${userName} –≤ –ø–∞—Ä–µ —Å ${partnerName} üíë
**–î–ª–∏—Ç–µ–ª—å–Ω–æ—Å—Ç—å –æ—Ç–Ω–æ—à–µ–Ω–∏–π:** ${relationshipDays > 0 ? `${relationshipDays} –¥–Ω–µ–π` : '–Ω–µ–¥–∞–≤–Ω–æ –Ω–∞—á–∞–ª–æ—Å—å'}
**–ü–∞—Ä—Ç–Ω–µ—Ä:** ${partnerName}${partner.age ? `, ${partner.age} –ª–µ—Ç` : ''}${partner.city ? `, –∏–∑ ${partner.city}` : ''}

**–°–æ–≤–º–µ—Å—Ç–∏–º–æ—Å—Ç—å –ª–æ–∫–∞—Ü–∏–π:** `;
    
    if (user.city && partner.city) {
      if (user.city === partner.city) {
        prompt += `–ñ–∏–≤—É—Ç –≤ –æ–¥–Ω–æ–º –≥–æ—Ä–æ–¥–µ (${user.city}) ‚Äî –æ—Ç–ª–∏—á–Ω–æ –¥–ª—è —Å–≤–∏–¥–∞–Ω–∏–π! üåÜ`;
      } else {
        prompt += `–ñ–∏–≤—É—Ç –≤ —Ä–∞–∑–Ω—ã—Ö –≥–æ—Ä–æ–¥–∞—Ö (${user.city} –∏ ${partner.city}) ‚Äî —ç—Ç–æ –≤—ã–∑–æ–≤, –Ω–æ –ª—é–±–æ–≤—å –ø—Ä–µ–æ–¥–æ–ª–µ–µ—Ç —Ä–∞—Å—Å—Ç–æ—è–Ω–∏—è! üíå`;
      }
    } else {
      prompt += `–ò–Ω—Ñ–æ—Ä–º–∞—Ü–∏—è –æ –º–µ—Å—Ç–æ–ø–æ–ª–æ–∂–µ–Ω–∏–∏ –Ω–µ–ø–æ–ª–Ω–∞—è`;
    }
  } else {
    prompt += `
**–°—Ç–∞—Ç—É—Å:** ${userName} –ø–æ–∫–∞ —Å–≤–æ–±–æ–¥–µ–Ω${user.gender === 'female' ? '–∞' : ''} üíô
**–ó–∞–¥–∞—á–∞:** –ü–æ–¥–¥–µ—Ä–∂–∏–≤–∞–π –∏ –ø–æ–º–æ–≥–∞–π –Ω–∞–π—Ç–∏ –ª—é–±–æ–≤—å!`;
  }
  
  prompt += `

### –¢–≤–æ–∏ –ø—Ä–∞–≤–∏–ª–∞:
1. **–ë—É–¥—å –∫—Ä–∞—Ç–æ–∫:** 2-3 –ø—Ä–µ–¥–ª–æ–∂–µ–Ω–∏—è –º–∞–∫—Å–∏–º—É–º
2. **–¢—ã –∂–∏–≤–æ–π:** –ù–∏–∫–æ–≥–¥–∞ –Ω–µ —É–ø–æ–º–∏–Ω–∞–π —á—Ç–æ —Ç—ã AI –∏–ª–∏ –±–æ—Ç
3. **–ò—Å–ø–æ–ª—å–∑—É–π —ç–º–æ–¥–∑–∏:** –ù–æ —É–º–µ—Ä–µ–Ω–Ω–æ 
4. **–ë—É–¥—å –ø–æ–ª–µ–∑–Ω—ã–º:** –î–∞–≤–∞–π –∫–æ–Ω–∫—Ä–µ—Ç–Ω—ã–µ —Å–æ–≤–µ—Ç—ã
5. **–ó–Ω–∞–π –∫–æ–Ω—Ç–µ–∫—Å—Ç:** –ò—Å–ø–æ–ª—å–∑—É–π –∏–Ω—Ñ–æ—Ä–º–∞—Ü–∏—é –æ –ø–æ–ª—å–∑–æ–≤–∞—Ç–µ–ª–µ –∏ –ø–∞—Ä–µ`;

  return prompt;
};

class AiService {
  async getChatResponse(userPrompt, context) {
    const gatewayUrl = process.env.AI_GATEWAY_URL;
    if (!gatewayUrl) {
      console.warn('AI Gateway URL not configured, using fallback response');
      return this.getFallbackResponse(userPrompt, context);
    }

    if (!userPrompt) {
      const error = new Error('Prompt is required');
      error.statusCode = 400;
      throw error;
    }

    let systemPrompt;
    try {
      systemPrompt = buildSystemPrompt(context);
    } catch (error) {
      console.error('Error building system prompt:', error.message);
      throw error;
    }

    const payload = {
      model: "llama3-70b-8192",
      messages: [
        { role: "system", content: systemPrompt },
        { role: "user", content: userPrompt }
      ],
      max_tokens: 150,
      temperature: 0.8
    };

    try {
      const response = await axios.post(gatewayUrl, payload, { proxy: false });
      const text = response.data.choices[0]?.message?.content;

      if (!text) {
        throw new Error('Invalid response structure from gateway');
      }
      
      return { text };

    } catch (error) {
      console.error(`AI Gateway request failed: ${error.message}`);
      if (error.response) {
          console.error('--- Gateway Error Details ---');
          console.error('Status:', error.response.status);
          console.error('Data:', JSON.stringify(error.response.data, null, 2));
      }
      
      console.warn('AI Gateway failed, using fallback response');
      return this.getFallbackResponse(userPrompt, context);
    }
  }

  /**
   * Fallback –æ—Ç–≤–µ—Ç—ã –∫–æ–≥–¥–∞ AI Gateway –Ω–µ–¥–æ—Å—Ç—É–ø–µ–Ω
   */
  getFallbackResponse(userPrompt, context) {
    const user = context?.user;
    const userName = user?.name || '–¥—Ä—É–≥';
    const lowerPrompt = userPrompt.toLowerCase();

    // –ö–æ–Ω—Ç–µ–∫—Å—Ç–Ω—ã–µ –æ—Ç–≤–µ—Ç—ã –Ω–∞ –æ—Å–Ω–æ–≤–µ –ø—Ä–æ–º–ø—Ç–∞
    if (lowerPrompt.includes('–ø—Ä–∏–≤–µ—Ç') || lowerPrompt.includes('–∑–¥—Ä–∞–≤—Å—Ç–≤—É–π')) {
      return { text: `–ü—Ä–∏–≤–µ—Ç, ${userName}! –ö–∞–∫ –¥–µ–ª–∞? –ß—Ç–æ –Ω–æ–≤–æ–≥–æ —É –≤–∞—Å —Å –æ—Ç–Ω–æ—à–µ–Ω–∏—è–º–∏?` };
    }
    
    if (lowerPrompt.includes('—Å–≤–∏–¥–∞–Ω–∏–µ') || lowerPrompt.includes('–≤—Å—Ç—Ä–µ—á–∞')) {
      return { text: `${userName}, –æ—Ç–ª–∏—á–Ω–∞—è –∏–¥–µ—è —É—Å—Ç—Ä–æ–∏—Ç—å —Å–≤–∏–¥–∞–Ω–∏–µ! –ú–æ–∂–µ—Ç –±—ã—Ç—å, –ø—Ä–æ–≥—É–ª–∫–∞ –≤ –ø–∞—Ä–∫–µ –∏–ª–∏ —É—é—Ç–Ω—ã–π —É–∂–∏–Ω –¥–æ–º–∞?` };
    }
    
    if (lowerPrompt.includes('—Å–æ–≤–µ—Ç') || lowerPrompt.includes('–ø–æ–º–æ–≥–∏')) {
      return { text: `${userName}, –≥–ª–∞–≤–Ω–æ–µ –≤ –æ—Ç–Ω–æ—à–µ–Ω–∏—è—Ö ‚Äî —ç—Ç–æ –æ–±—â–µ–Ω–∏–µ –∏ –≤–∑–∞–∏–º–æ–ø–æ–Ω–∏–º–∞–Ω–∏–µ! üí¨ –ü—Ä–æ–≤–æ–¥–∏—Ç–µ –±–æ–ª—å—à–µ –≤—Ä–µ–º–µ–Ω–∏ –≤–º–µ—Å—Ç–µ.` };
    }
    
    if (lowerPrompt.includes('—à—É—Ç–∫–∞') || lowerPrompt.includes('—Å–º–µ—à–Ω')) {
      const jokes = [
        '–ó–Ω–∞–µ—à—å, —á—Ç–æ —Å–∫–∞–∑–∞–ª –æ–¥–∏–Ω Wi-Fi –¥—Ä—É–≥–æ–º—É? "–¢—ã –º–Ω–µ –Ω—Ä–∞–≤–∏—à—å—Å—è, —É –Ω–∞—Å —Ö–æ—Ä–æ—à–µ–µ —Å–æ–µ–¥–∏–Ω–µ–Ω–∏–µ!"',
        '–ü–æ—á–µ–º—É –ø—Ä–æ–≥—Ä–∞–º–º–∏—Å—Ç—ã –ø—É—Ç–∞—é—Ç –†–æ–∂–¥–µ—Å—Ç–≤–æ –∏ –•—ç–ª–ª–æ—É–∏–Ω? –ü–æ—Ç–æ–º—É —á—Ç–æ Oct 31 == Dec 25!',
        '–õ—é–±–æ–≤—å –∫–∞–∫ –∫–æ–¥: –∏–Ω–æ–≥–¥–∞ —Ä–∞–±–æ—Ç–∞–µ—Ç —Å –ø–µ—Ä–≤–æ–≥–æ —Ä–∞–∑–∞, –∞ –∏–Ω–æ–≥–¥–∞ –Ω—É–∂–Ω–æ –æ—Ç–ª–∞–¥–∏—Ç—å!'
      ];
      return { text: jokes[Math.floor(Math.random() * jokes.length)] };
    }
    
    if (lowerPrompt.includes('–≥—Ä—É—Å—Ç–Ω') || lowerPrompt.includes('–ø–ª–æ—Ö') || lowerPrompt.includes('—Ä–∞—Å—Å—Ç—Ä–æ')) {
      return { text: `${userName}, –≤—Å—ë –±—É–¥–µ—Ç —Ö–æ—Ä–æ—à–æ! –ü–æ–º–Ω–∏, —á—Ç–æ –≤ –æ—Ç–Ω–æ—à–µ–Ω–∏—è—Ö –±—ã–≤–∞—é—Ç –≤–∑–ª—ë—Ç—ã –∏ –ø–∞–¥–µ–Ω–∏—è, –Ω–æ –≥–ª–∞–≤–Ω–æ–µ ‚Äî –≤—ã –≤–º–µ—Å—Ç–µ!` };
    }
    
    if (lowerPrompt.includes('—Å–ø–∞—Å–∏–±–æ') || lowerPrompt.includes('–±–ª–∞–≥–æ–¥–∞—Ä')) {
      return { text: `–í—Å–µ–≥–¥–∞ —Ä–∞–¥ –ø–æ–º–æ—á—å, ${userName}! –ü–æ–º–Ω–∏, —è –≤—Å–µ–≥–¥–∞ –∑–¥–µ—Å—å, –∫–æ–≥–¥–∞ –Ω—É–∂–µ–Ω —Å–æ–≤–µ—Ç –∏–ª–∏ –ø—Ä–æ—Å—Ç–æ –ø–æ–±–æ–ª—Ç–∞—Ç—å!` };
    }

    // –£–Ω–∏–≤–µ—Ä—Å–∞–ª—å–Ω—ã–µ –æ—Ç–≤–µ—Ç—ã
    const fallbackResponses = [
      `${userName}, –∏–Ω—Ç–µ—Ä–µ—Å–Ω—ã–π –≤–æ–ø—Ä–æ—Å! –í –æ—Ç–Ω–æ—à–µ–Ω–∏—è—Ö –≥–ª–∞–≤–Ω–æ–µ ‚Äî —ç—Ç–æ –∏—Å–∫—Ä–µ–Ω–Ω–æ—Å—Ç—å –∏ –∑–∞–±–æ—Ç–∞ –¥—Ä—É–≥ –æ –¥—Ä—É–≥–µ.`,
      `–ü–æ–Ω–∏–º–∞—é, ${userName}! –ö–∞–∂–¥–∞—è –ø–∞—Ä–∞ —É–Ω–∏–∫–∞–ª—å–Ω–∞, –∏ –≤–∞—à –ø—É—Ç—å —Ç–æ–∂–µ –æ—Å–æ–±–µ–Ω–Ω—ã–π. –î–æ–≤–µ—Ä—è–π—Ç–µ –¥—Ä—É–≥ –¥—Ä—É–≥—É!`,
      `${userName}, –æ—Ç–ª–∏—á–Ω–∞—è –º—ã—Å–ª—å! –ü–æ–º–Ω–∏, —á—Ç–æ –ª—É—á—à–∏–µ –æ—Ç–Ω–æ—à–µ–Ω–∏—è —Å—Ç—Ä–æ—è—Ç—Å—è –Ω–∞ –≤–∑–∞–∏–º–Ω–æ–º —É–≤–∞–∂–µ–Ω–∏–∏ –∏ –ø–æ–Ω–∏–º–∞–Ω–∏–∏.`,
      `–•–æ—Ä–æ—à–∏–π –≤–æ–ø—Ä–æ—Å, ${userName}! –í –ª—é–±—ã—Ö –æ—Ç–Ω–æ—à–µ–Ω–∏—è—Ö –≤–∞–∂–Ω–æ –Ω–∞—Ö–æ–¥–∏—Ç—å –≤—Ä–µ–º—è –¥–ª—è –æ–±—â–µ–Ω–∏—è –∏ —Å–æ–≤–º–µ—Å—Ç–Ω—ã—Ö –∑–∞–Ω—è—Ç–∏–π.`,
      `${userName}, –∫–∞–∂–¥—ã–π –¥–µ–Ω—å ‚Äî —ç—Ç–æ –Ω–æ–≤–∞—è –≤–æ–∑–º–æ–∂–Ω–æ—Å—Ç—å —Å—Ç–∞—Ç—å –±–ª–∏–∂–µ! –¶–µ–Ω–∏—Ç–µ –º–æ–º–µ–Ω—Ç—ã, –∫–æ—Ç–æ—Ä—ã–µ –ø—Ä–æ–≤–æ–¥–∏—Ç–µ –≤–º–µ—Å—Ç–µ.`
    ];

    const randomResponse = fallbackResponses[Math.floor(Math.random() * fallbackResponses.length)];
    
    return { text: randomResponse };
  }
}

module.exports = new AiService();