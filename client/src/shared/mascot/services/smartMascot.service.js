import api from '../../services/api';
class SmartMascotService {
  constructor() {
    this.userContext = {
      partner: null,
      user: null,
      recentEvents: [],
      preferences: {},
      relationshipStats: {},
      communicationStyle: 'friendly', // friendly, romantic, playful, wise
      lastInteractions: [],
      memoryPersistence: new Map()
    };
    this.loadUserContext();
  }
  loadUserContext() {
    try {
      const savedContext = localStorage.getItem('mascot_context');
      if (savedContext) {
        const parsed = JSON.parse(savedContext);
        this.userContext = { ...this.userContext, ...parsed };
      }
    } catch (error) {
      console.error('Error loading mascot context:', error);
    }
  }
  saveUserContext() {
    try {
      localStorage.setItem('mascot_context', JSON.stringify({
        ...this.userContext,
        lastSaved: new Date().toISOString()
      }));
    } catch (error) {
      console.error('Error saving mascot context:', error);
    }
  }
  updateUserContext(userData, partnerData = null) {
    this.userContext.user = userData;
    if (partnerData) {
      this.userContext.partner = partnerData;
    }
    this.saveUserContext();
  }
  updateRecentActivity(events, stats = {}) {
    this.userContext.recentEvents = events.slice(-10); // –ü–æ—Å–ª–µ–¥–Ω–∏–µ 10 —Å–æ–±—ã—Ç–∏–π
    this.userContext.relationshipStats = stats;
    this.saveUserContext();
  }
  generatePastMemoryMessage(event) {
    const { user, partner } = this.userContext;
    const userName = user?.name || '–¥–æ—Ä–æ–≥–æ–π';
    const partnerName = partner?.name || '–≤–∞—à –ø–∞—Ä—Ç–Ω–µ—Ä';
    const eventDate = new Date(event.event_date);
    const monthsAgo = Math.floor((new Date() - eventDate) / (1000 * 60 * 60 * 24 * 30));
    const dayName = eventDate.toLocaleDateString('ru-RU', { weekday: 'long' });
    const dateStr = eventDate.toLocaleDateString('ru-RU', { 
      month: 'long', 
      day: 'numeric',
      year: eventDate.getFullYear() !== new Date().getFullYear() ? 'numeric' : undefined
    });
    const memoryTemplates = [
      `${userName}, –ø–æ–º–Ω–∏—Ç–µ —Ç–æ—Ç –≤–æ–ª—à–µ–±–Ω—ã–π ${dayName}, ${dateStr}? "${event.title}" - —ç—Ç–æ –±—ã–ª–æ —Ç–∞–∫ –ø—Ä–µ–∫—Ä–∞—Å–Ω–æ! ${partnerName} –Ω–∞–≤–µ—Ä–Ω—è–∫–∞ —Ç–æ–∂–µ –ø–æ–º–Ω–∏—Ç —ç—Ç–∏ –º–æ–º–µ–Ω—Ç—ã ‚ù§Ô∏è`,
      `–≠—Ö, –∫–∞–∫ –±—ã—Å—Ç—Ä–æ –ª–µ—Ç–∏—Ç –≤—Ä–µ–º—è... ${monthsAgo} ${this.getMonthForm(monthsAgo)} –Ω–∞–∑–∞–¥ —É –≤–∞—Å –±—ã–ª–æ "${event.title}". ${partnerName}, –Ω–∞–≤–µ—Ä–Ω–æ–µ, –¥–æ —Å–∏—Ö –ø–æ—Ä —É–ª—ã–±–∞–µ—Ç—Å—è, –≤—Å–ø–æ–º–∏–Ω–∞—è —Ç–æ—Ç –¥–µ–Ω—å!`,
      `${userName}, —è —Ç—É—Ç –ª–∏—Å—Ç–∞–ª –≤–∞—à–∏ –≤–æ—Å–ø–æ–º–∏–Ω–∞–Ω–∏—è –∏ –Ω–∞—Ç–∫–Ω—É–ª—Å—è –Ω–∞ "${event.title}" –æ—Ç ${dateStr}. –ú–æ–∂–µ—Ç, —Ä–∞—Å—Å–∫–∞–∂–µ—Ç–µ ${partnerName} —á—Ç–æ-—Ç–æ –æ—Å–æ–±–µ–Ω–Ω–æ–µ –∏–∑ —Ç–æ–≥–æ –¥–Ω—è? üòä`,
      `–ó–Ω–∞–µ—Ç–µ, —á—Ç–æ –º–µ–Ω—è –≤–¥–æ—Ö–Ω–æ–≤–ª—è–µ—Ç –≤ –≤–∞—à–∏—Ö –æ—Ç–Ω–æ—à–µ–Ω–∏—è—Ö? –¢–∞–∫–∏–µ –º–æ–º–µ–Ω—Ç—ã –∫–∞–∫ "${event.title}" ${monthsAgo} ${this.getMonthForm(monthsAgo)} –Ω–∞–∑–∞–¥. –î–∞–≤–∞–π—Ç–µ —Å–æ–∑–¥–∞–¥–∏–º –µ—â–µ –æ–¥–Ω–æ –ø—Ä–µ–∫—Ä–∞—Å–Ω–æ–µ –≤–æ—Å–ø–æ–º–∏–Ω–∞–Ω–∏–µ!`,
      `${userName}, –∏–Ω–æ–≥–¥–∞ —Å–∞–º—ã–µ –¥–æ—Ä–æ–≥–∏–µ –º–æ–º–µ–Ω—Ç—ã —Å—Ç–∞–Ω–æ–≤—è—Ç—Å—è –µ—â–µ —Ü–µ–Ω–Ω–µ–µ —Å–æ –≤—Ä–µ–º–µ–Ω–µ–º. "${event.title}" ${dateStr} - –æ–¥–∏–Ω –∏–∑ —Ç–∞–∫–∏—Ö. ${partnerName} —Ç–æ–∂–µ –¥–æ—Ä–æ–∂–∏—Ç —ç—Ç–∏–º–∏ –≤–æ—Å–ø–æ–º–∏–Ω–∞–Ω–∏—è–º–∏ ‚ú®`
    ];
    const styleIndex = this.getStyleBasedIndex(memoryTemplates.length);
    return memoryTemplates[styleIndex];
  }
  generateFutureEventMessage(event) {
    const { user, partner } = this.userContext;
    const userName = user?.name || '–¥–æ—Ä–æ–≥–æ–π';
    const partnerName = partner?.name || '–≤–∞—à –ø–∞—Ä—Ç–Ω–µ—Ä';
    const eventDate = new Date(event.event_date);
    const today = new Date();
    const diffTime = eventDate - today;
    const diffDays = Math.ceil(diffTime / (1000 * 60 * 60 * 24));
    const timeOfDay = this.getEventTimeContext(eventDate);
    const dayName = eventDate.toLocaleDateString('ru-RU', { weekday: 'long' });
    let futureTemplates = [];
    if (diffDays === 0) {
      futureTemplates = [
        `üéâ ${userName}, —Å–µ–≥–æ–¥–Ω—è —Ç–æ—Ç —Å–∞–º—ã–π –¥–µ–Ω—å! "${event.title}" ${timeOfDay}. ${partnerName} —É–∂–µ –≥–æ—Ç–æ–≤–∏—Ç—Å—è? –ë—É–¥–µ—Ç –Ω–µ–∑–∞–±—ã–≤–∞–µ–º–æ!`,
        `–£—Ä–∞! –°–µ–≥–æ–¥–Ω—è "${event.title}"! ${userName}, —è —Ç–∞–∫ –≤–∑–≤–æ–ª–Ω–æ–≤–∞–Ω –∑–∞ –≤–∞—Å –¥–≤–æ–∏—Ö. –≠—Ç–æ –±—É–¥–µ—Ç –æ—Å–æ–±–µ–Ω–Ω—ã–π –¥–µ–Ω—å ‚ú®`,
        `${userName}, —á—É–≤—Å—Ç–≤—É–µ—Ç–µ —ç—Ç–∏ –±–∞–±–æ—á–∫–∏ –≤ –∂–∏–≤–æ—Ç–µ? –°–µ–≥–æ–¥–Ω—è "${event.title}"! ${partnerName} –Ω–∞–≤–µ—Ä–Ω—è–∫–∞ —Ç–æ–∂–µ –≤ –ø—Ä–µ–¥–≤–∫—É—à–µ–Ω–∏–∏ üíï`,
      ];
    } else if (diffDays === 1) {
      futureTemplates = [
        `‚è∞ ${userName}, –∑–∞–≤—Ç—Ä–∞ –≤ ${dayName} —É –≤–∞—Å "${event.title}"! –£–∂–µ –ø—Ä–∏–¥—É–º–∞–ª–∏, —á—Ç–æ –Ω–∞–¥–µ—Ç—å? ${partnerName} —Ç–æ—á–Ω–æ –±—É–¥–µ—Ç –≤ –≤–æ—Å—Ç–æ—Ä–≥–µ!`,
        `–ó–∞–≤—Ç—Ä–∞ –≤–æ–ª—à–µ–±–Ω—ã–π –¥–µ–Ω—å! "${event.title}" –∂–¥–µ—Ç –≤–∞—Å –¥–≤–æ–∏—Ö. ${userName}, –º–æ–∂–µ—Ç, –ø–æ–¥–≥–æ—Ç–æ–≤–∏—Ç–µ –Ω–µ–±–æ–ª—å—à–æ–π —Å—é—Ä–ø—Ä–∏–∑ –¥–ª—è ${partnerName}? üòä`,
        `${userName}, –æ—Å—Ç–∞–ª–∞—Å—å –≤—Å–µ–≥–æ –æ–¥–Ω–∞ –Ω–æ—á—å –¥–æ "${event.title}"! –Ø —Ç–∞–∫ —Ä–∞–¥ –∑–∞ –≤–∞—à–∏ –æ—Ç–Ω–æ—à–µ–Ω–∏—è - –≤—ã —É–º–µ–µ—Ç–µ —Ä–∞–¥–æ–≤–∞—Ç—å –¥—Ä—É–≥ –¥—Ä—É–≥–∞ üí´`,
      ];
    } else if (diffDays <= 7) {
      futureTemplates = [
        `üìÖ ${userName}, —á–µ—Ä–µ–∑ ${diffDays} ${this.getDayForm(diffDays)} —É –≤–∞—Å "${event.title}"! –í—Ä–µ–º—è –ø—Ä–æ–ª–µ—Ç–∏—Ç –Ω–µ–∑–∞–º–µ—Ç–Ω–æ. ${partnerName} –Ω–∞–≤–µ—Ä–Ω—è–∫–∞ —Ç–æ–∂–µ —Å—á–∏—Ç–∞–µ—Ç –¥–Ω–∏!`,
        `–°–∫–æ—Ä–æ-—Å–∫–æ—Ä–æ! "${event.title}" —É–∂–µ –Ω–∞ –≥–æ—Ä–∏–∑–æ–Ω—Ç–µ - —á–µ—Ä–µ–∑ ${diffDays} ${this.getDayForm(diffDays)}. ${userName}, –ø—Ä–µ–¥–≤–∫—É—à–µ–Ω–∏–µ - —ç—Ç–æ —á–∞—Å—Ç—å —É–¥–æ–≤–æ–ª—å—Å—Ç–≤–∏—è ‚ú®`,
        `${userName}, –∑–Ω–∞–µ—Ç–µ —á—Ç–æ? –ß–µ—Ä–µ–∑ ${diffDays} ${this.getDayForm(diffDays)} –≤–∞—Å –∂–¥–µ—Ç "${event.title}". –í—Ä–µ–º—è –ø–æ–¥—É–º–∞—Ç—å –æ –¥–µ—Ç–∞–ª—è—Ö, –∫–æ—Ç–æ—Ä—ã–µ —Å–¥–µ–ª–∞—é—Ç –¥–µ–Ω—å –æ—Å–æ–±–µ–Ω–Ω—ã–º!`,
      ];
    } else {
      futureTemplates = [
        `üóìÔ∏è ${userName}, –≤–ø–µ—Ä–µ–¥–∏ –∫–æ–µ-—á—Ç–æ –∑–∞–º–µ—á–∞—Ç–µ–ª—å–Ω–æ–µ! "${event.title}" ${eventDate.toLocaleDateString('ru-RU', { month: 'long', day: 'numeric' })}. ${partnerName} —É–∂–µ –≤ –∫—É—Ä—Å–µ –≤—Å–µ—Ö –ø–ª–∞–Ω–æ–≤?`,
        `–£ –Ω–∞—Å –µ—Å—Ç—å –≤—Ä–µ–º—è –ø–æ–¥–≥–æ—Ç–æ–≤–∏—Ç—å—Å—è –∫ —á–µ–º—É-—Ç–æ –æ—Å–æ–±–µ–Ω–Ω–æ–º—É! "${event.title}" —á–µ—Ä–µ–∑ ${diffDays} ${this.getDayForm(diffDays)}. ${userName}, –∫–∞–∫–∏–µ —É –≤–∞—Å –æ–∂–∏–¥–∞–Ω–∏—è? ü§î`,
        `${userName}, —è –æ–±–æ–∂–∞—é, –∫–∞–∫ –≤—ã –ø–ª–∞–Ω–∏—Ä—É–µ—Ç–µ –≤—Ä–µ–º—è –≤–º–µ—Å—Ç–µ! "${event.title}" –±—É–¥–µ—Ç —á–µ—Ä–µ–∑ ${diffDays} ${this.getDayForm(diffDays)} - –µ—Å—Ç—å –≤—Ä–µ–º—è –¥–æ–±–∞–≤–∏—Ç—å –∏–∑—é–º–∏–Ω–∫—É!`,
      ];
    }
    const styleIndex = this.getStyleBasedIndex(futureTemplates.length);
    return futureTemplates[styleIndex];
  }
  generateContextualMessage(context = {}) {
    const { user, partner, relationshipStats } = this.userContext;
    const userName = user?.name || '–¥–æ—Ä–æ–≥–æ–π';
    const partnerName = partner?.name || '–≤–∞—à –±–ª–∏–∑–∫–∏–π —á–µ–ª–æ–≤–µ–∫';
    
    // –û–ø—Ä–µ–¥–µ–ª—è–µ–º –∫–æ–Ω—Ç–µ–∫—Å—Ç —Å—Ç—Ä–∞–Ω–∏—Ü—ã
    const currentPage = context.page || this.detectCurrentPage();
    
    const contextTemplates = {
      // –û—Å–Ω–æ–≤–Ω—ã–µ —Å–æ—Å—Ç–æ—è–Ω–∏—è
      idle: [
        `${userName}, –¥–∞–≤–Ω–µ–Ω—å–∫–æ –Ω–µ –≤–∏–¥–µ–ª –≤–∞—Å –∑–¥–µ—Å—å! –ö–∞–∫ –¥–µ–ª–∞? –ú–æ–∂–µ—Ç, –≤—Ä–µ–º—è –∑–∞–ø–ª–∞–Ω–∏—Ä–æ–≤–∞—Ç—å —á—Ç–æ-—Ç–æ –æ—Å–æ–±–µ–Ω–Ω–æ–µ? üí≠`,
        `–°–æ—Å–∫—É—á–∏–ª—Å—è –ø–æ –≤–∞—à–∏–º –ø—Ä–∏–∫–ª—é—á–µ–Ω–∏—è–º! ${userName}, —á—Ç–æ –Ω–æ–≤–æ–≥–æ –≤ –æ—Ç–Ω–æ—à–µ–Ω–∏—è—Ö? üòä`,
        `${userName}, –ø–æ–º–Ω–∏—Ç–µ, —á—Ç–æ –ª—É—á—à–∏–µ –æ—Ç–Ω–æ—à–µ–Ω–∏—è —Ç—Ä–µ–±—É—é—Ç –≤–Ω–∏–º–∞–Ω–∏—è. –ö–æ–≥–¥–∞ –≤ –ø–æ—Å–ª–µ–¥–Ω–∏–π —Ä–∞–∑ –¥–µ–ª–∞–ª–∏ —á—Ç–æ-—Ç–æ —Å–ø–æ–Ω—Ç–∞–Ω–Ω–æ–µ? ‚ú®`,
      ],
      // –ö–æ–Ω—Ç–µ–∫—Å—Ç—ã –¥–ª—è –∫–æ–Ω–∫—Ä–µ—Ç–Ω—ã—Ö —Å—Ç—Ä–∞–Ω–∏—Ü
      dashboard: [
        `${userName}, –æ—Ç–ª–∏—á–Ω—ã–π —Å–ø–æ—Å–æ–± –Ω–∞—á–∞—Ç—å –¥–µ–Ω—å - –ø–æ—Å–º–æ—Ç—Ä–µ—Ç—å –Ω–∞ –≤–∞—à–∏ –≤–æ—Å–ø–æ–º–∏–Ω–∞–Ω–∏—è! üåÖ`,
        `–ö–∞–∫–∏–µ –ø–ª–∞–Ω—ã –Ω–∞ —Å–µ–≥–æ–¥–Ω—è? –ú–æ–∂–µ—Ç, –¥–æ–±–∞–≤–∏–º —á—Ç–æ-—Ç–æ –æ—Å–æ–±–µ–Ω–Ω–æ–µ –≤ –∫–∞–ª–µ–Ω–¥–∞—Ä—å? üìÖ`,
        `${userName}, LoveMemory –ø–æ–º–æ–≥–∞–µ—Ç —Å–æ–∑–¥–∞–≤–∞—Ç—å –º–æ–º–µ–Ω—Ç—ã. –ß—Ç–æ –±—É–¥–µ–º –ø–ª–∞–Ω–∏—Ä–æ–≤–∞—Ç—å? ‚ú®`,
      ],
      games: [
        `${userName}, –∏–≥—Ä—ã –≤–º–µ—Å—Ç–µ - –æ—Ç–ª–∏—á–Ω—ã–π —Å–ø–æ—Å–æ–± –ø–æ–≤–µ—Å–µ–ª–∏—Ç—å—Å—è –∏ —Å–±–ª–∏–∑–∏—Ç—å—Å—è! üéÆ`,
        `–ì–æ—Ç–æ–≤—ã –∫ –≤–µ—Å–µ–ª—å—é? –ò–≥—Ä—ã –ø–æ–º–æ–≥–∞—é—Ç –ª—É—á—à–µ —É–∑–Ω–∞—Ç—å –¥—Ä—É–≥ –¥—Ä—É–≥–∞! üòÑ`,
        `${userName}, –∞ –¥–∞–≤–∞–π—Ç–µ –ø—Ä–æ–≤–µ—Ä–∏–º —Å–æ–≤–º–µ—Å—Ç–∏–º–æ—Å—Ç—å –≤ –∏–≥—Ä–∞—Ö? üéØ`,
      ],
      insights: [
        `${userName}, –∞–Ω–∞–ª–∏—Ç–∏–∫–∞ –æ—Ç–Ω–æ—à–µ–Ω–∏–π –º–æ–∂–µ—Ç –æ—Ç–∫—Ä—ã—Ç—å –º–Ω–æ–≥–æ –∏–Ω—Ç–µ—Ä–µ—Å–Ω–æ–≥–æ! üìä`,
        `–î–∞–≤–∞–π—Ç–µ –∏–∑—É—á–∏–º –≤–∞—à–∏ –ø–∞—Ç—Ç–µ—Ä–Ω—ã –æ–±—â–µ–Ω–∏—è –∏ –±–ª–∏–∑–æ—Å—Ç–∏! üîç`,
        `${userName}, –¥–∞–Ω–Ω—ã–µ –ø–æ–º–æ–≥–∞—é—Ç –ø–æ–Ω—è—Ç—å, –∫–∞–∫ —Å–¥–µ–ª–∞—Ç—å –æ—Ç–Ω–æ—à–µ–Ω–∏—è –µ—â–µ –ª—É—á—à–µ! üí°`,
      ],
      profile: [
        `${userName}, –ø—Ä–æ—Ñ–∏–ª—å - —ç—Ç–æ –≤–∞—à–∞ –∏—Å—Ç–æ—Ä–∏—è –≤ LoveMemory! ‚ú®`,
        `–ù–µ –∑–∞–±—ã–≤–∞–π—Ç–µ –æ–±–Ω–æ–≤–ª—è—Ç—å –∏–Ω—Ñ–æ—Ä–º–∞—Ü–∏—é –æ —Å–µ–±–µ! üìù`,
        `${userName}, –∫–∞–∫ –∏–¥—É—Ç –¥–µ–ª–∞ —Å –¥–æ—Å—Ç–∏–∂–µ–Ω–∏—è–º–∏? üèÜ`,
      ],
      active: [
        `${userName}, –≤—ã —Å ${partnerName} –ø—Ä–æ—Å—Ç–æ –º–æ–ª–æ–¥—Ü—ã! –°—Ç–æ–ª—å–∫–æ –∞–∫—Ç–∏–≤–Ω–æ—Å—Ç–∏ - –æ—Ç–Ω–æ—à–µ–Ω–∏—è –ø—Ä–æ—Ü–≤–µ—Ç–∞—é—Ç! üåü`,
        `–û–±–æ–∂–∞—é –Ω–∞–±–ª—é–¥–∞—Ç—å –∑–∞ –≤–∞—à–∏–º–∏ —Å ${partnerName} –ø—Ä–∏–∫–ª—é—á–µ–Ω–∏—è–º–∏, ${userName}! –í—ã –∑–Ω–∞–µ—Ç–µ, –∫–∞–∫ —Å–¥–µ–ª–∞—Ç—å –∂–∏–∑–Ω—å —è—Ä–∫–æ–π üé®`,
        `${userName}, –≤–∞—à–∞ —Å ${partnerName} —ç–Ω–µ—Ä–≥–∏—è –∑–∞—Ä–∞–∑–∏—Ç–µ–ª—å–Ω–∞! –ü—Ä–æ–¥–æ–ª–∂–∞–π—Ç–µ –≤ —Ç–æ–º –∂–µ –¥—É—Ö–µ! üí™`,
      ],
      communication: [
        `${userName}, –æ–±—â–µ–Ω–∏–µ - —ç—Ç–æ –æ—Å–Ω–æ–≤–∞ –∫—Ä–µ–ø–∫–∏—Ö –æ—Ç–Ω–æ—à–µ–Ω–∏–π. –ö–∞–∫ —á–∞—Å—Ç–æ –≤—ã —Å ${partnerName} –¥–µ–ª–∏—Ç–µ—Å—å —Å–≤–æ–∏–º–∏ –º—ã—Å–ª—è–º–∏? üí¨`,
        `–ó–Ω–∞–µ—Ç–µ, ${userName}, ${partnerName} –Ω–∞–≤–µ—Ä–Ω—è–∫–∞ —Ü–µ–Ω–∏—Ç –≤–∞—à–∏ –æ—Ç–∫—Ä–æ–≤–µ–Ω–Ω—ã–µ —Ä–∞–∑–≥–æ–≤–æ—Ä—ã. –ù–µ —Å—Ç–µ—Å–Ω—è–π—Ç–µ—Å—å –±—ã—Ç—å —Å–æ–±–æ–π! üíï`,
        `${userName}, –ø–æ–º–Ω–∏—Ç–µ: –¥–∞–∂–µ –ø—Ä–æ—Å—Ç–æ–µ "–∫–∞–∫ –¥–µ–ª–∞?" –º–æ–∂–µ—Ç —É–∫—Ä–µ–ø–∏—Ç—å —Å–≤—è–∑—å —Å ${partnerName} ü§ó`,
      ],
      growth: [
        `${userName}, –∞ –Ω–µ –ø–æ–ø—Ä–æ–±–æ–≤–∞—Ç—å –ª–∏ –≤–∞–º —Å ${partnerName} —á—Ç–æ-—Ç–æ –Ω–æ–≤–æ–µ? –ù–æ–≤—ã–µ –æ–ø—ã—Ç—ã —Å–±–ª–∏–∂–∞—é—Ç! üå±`,
        `–í–∏–¥–µ–ª –≤–∞—à–∏ —É—Å–ø–µ—Ö–∏ —Å ${partnerName}, ${userName}! –ê —á—Ç–æ –µ—Å–ª–∏ —Å–¥–µ–ª–∞—Ç—å —Å–ª–µ–¥—É—é—â–∏–π —à–∞–≥ –≤ –≤–∞—à–∏—Ö –æ—Ç–Ω–æ—à–µ–Ω–∏—è—Ö? üöÄ`,
        `${userName}, —Ä–æ—Å—Ç –æ—Ç–Ω–æ—à–µ–Ω–∏–π - —ç—Ç–æ –ø—É—Ç–µ—à–µ—Å—Ç–≤–∏–µ. –ö—É–¥–∞ –±—ã –≤—ã —Ö–æ—Ç–µ–ª–∏ –æ—Ç–ø—Ä–∞–≤–∏—Ç—å—Å—è –≤–º–µ—Å—Ç–µ —Å ${partnerName}? üó∫Ô∏è`,
      ]
    };
    // –°–Ω–∞—á–∞–ª–∞ –ø—Ä–æ–±—É–µ–º –Ω–∞–π—Ç–∏ —Å–ø–µ—Ü–∏—Ñ–∏—á–Ω—ã–µ –¥–ª—è —Å—Ç—Ä–∞–Ω–∏—Ü—ã —Ñ—Ä–∞–∑—ã
    let templates = contextTemplates[currentPage];
    
    // –ï—Å–ª–∏ –Ω–µ—Ç —Å–ø–µ—Ü–∏—Ñ–∏—á–Ω—ã—Ö —Ñ—Ä–∞–∑ –¥–ª—è —Å—Ç—Ä–∞–Ω–∏—Ü—ã, –∏—Å–ø–æ–ª—å–∑—É–µ–º –æ–±—â–∏–π –∫–æ–Ω—Ç–µ–∫—Å—Ç
    if (!templates) {
      const contextType = context.type || this.determineContextType();
      templates = contextTemplates[contextType] || contextTemplates.growth;
    }
    
    const styleIndex = this.getStyleBasedIndex(templates.length);
    return templates[styleIndex];
  }

  // –û–ø—Ä–µ–¥–µ–ª—è–µ–º —Ç–µ–∫—É—â—É—é —Å—Ç—Ä–∞–Ω–∏—Ü—É –ø–æ URL
  detectCurrentPage() {
    const path = window.location.pathname;
    if (path.includes('/dashboard')) return 'dashboard';
    if (path.includes('/games')) return 'games';
    if (path.includes('/insights')) return 'insights';
    if (path.includes('/profile')) return 'profile';
    if (path.includes('/lessons')) return 'lessons';
    if (path.includes('/calendar')) return 'calendar';
    return 'general';
  }
  determineContextType() {
    const { recentEvents, lastInteractions } = this.userContext;
    const now = new Date();
    const recentActivity = recentEvents.filter(event => 
      (now - new Date(event.created_at)) < (7 * 24 * 60 * 60 * 1000) // –ü–æ—Å–ª–µ–¥–Ω–∏–µ 7 –¥–Ω–µ–π
    );
    if (recentActivity.length === 0 && lastInteractions.length === 0) {
      return 'idle';
    } else if (recentActivity.length > 3) {
      return 'active';
    } else if (Math.random() > 0.5) {
      return 'communication';
    } else {
      return 'growth';
    }
  }
  analyzeLoveLanguages(events, interactions = []) {
    const loveLanguageAnalysis = {
      physical_touch: 0,      // –û–±—ä—è—Ç–∏—è, –ø—Ä–∏–∫–æ—Å–Ω–æ–≤–µ–Ω–∏—è
      quality_time: 0,        // –°–æ–≤–º–µ—Å—Ç–Ω–æ–µ –≤—Ä–µ–º—è
      words_of_affirmation: 0, // –°–ª–æ–≤–∞ –ø–æ–¥–¥–µ—Ä–∂–∫–∏
      acts_of_service: 0,     // –ü–æ–º–æ—â—å –∏ –∑–∞–±–æ—Ç–∞
      receiving_gifts: 0      // –ü–æ–¥–∞—Ä–∫–∏
    };
    events.forEach(event => {
      const title = event.title.toLowerCase();
      const description = (event.description || '').toLowerCase();
      const content = title + ' ' + description;
      if (content.includes('–≤—Ä–µ–º—è –≤–º–µ—Å—Ç–µ') || content.includes('–≤–º–µ—Å—Ç–µ') || 
          content.includes('–ø–æ—Ö–æ–¥') || content.includes('–∫–∏–Ω–æ') ||
          content.includes('–ø—Ä–æ–≥—É–ª–∫–∞') || content.includes('–ø—É—Ç–µ—à–µ—Å—Ç–≤–∏–µ')) {
        loveLanguageAnalysis.quality_time += 2;
      }
      if (content.includes('–ø–æ–¥–∞—Ä–æ–∫') || content.includes('—Å—é—Ä–ø—Ä–∏–∑') ||
          content.includes('—Ü–≤–µ—Ç—ã') || content.includes('–ø–æ–∫—É–ø–∫–∞')) {
        loveLanguageAnalysis.receiving_gifts += 2;
      }
      if (content.includes('–ø–æ–∑–¥—Ä–∞–≤–ª–µ–Ω–∏–µ') || content.includes('–ø–æ–¥–¥–µ—Ä–∂–∫–∞') ||
          content.includes('–∫–æ–º–ø–ª–∏–º–µ–Ω—Ç') || content.includes('–ø—Ä–∏–∑–Ω–∞–Ω–∏–µ')) {
        loveLanguageAnalysis.words_of_affirmation += 2;
      }
      if (content.includes('–ø–æ–º–æ—â—å') || content.includes('–∑–∞–±–æ—Ç–∞') ||
          content.includes('–ø—Ä–∏–≥–æ—Ç–æ–≤–∏—Ç—å') || content.includes('—É–±—Ä–∞—Ç—å')) {
        loveLanguageAnalysis.acts_of_service += 2;
      }
      if (content.includes('–æ–±–Ω—è—Ç—å') || content.includes('–ø–æ—Ü–µ–ª—É–π') ||
          content.includes('–º–∞—Å—Å–∞–∂') || content.includes('–±–ª–∏–∑–æ—Å—Ç—å')) {
        loveLanguageAnalysis.physical_touch += 2;
      }
    });
    const sortedLanguages = Object.entries(loveLanguageAnalysis)
      .sort(([,a], [,b]) => b - a)
      .slice(0, 2);
    return {
      analysis: loveLanguageAnalysis,
      dominant: sortedLanguages,
      suggestions: this.generateLoveLanguageSuggestions(sortedLanguages)
    };
  }
  generateLoveLanguageSuggestions(dominantLanguages) {
    const suggestions = {
      physical_touch: [
        "–ü–æ–ø—Ä–æ–±—É–π—Ç–µ –±–æ–ª—å—à–µ –æ–±—ä—è—Ç–∏–π –∏ –Ω–µ–∂–Ω—ã—Ö –ø—Ä–∏–∫–æ—Å–Ω–æ–≤–µ–Ω–∏–π",
        "–ú–∞—Å—Å–∞–∂ –¥–ª—è –ø–∞—Ä—Ç–Ω–µ—Ä–∞ - –æ—Ç–ª–∏—á–Ω–∞—è –∏–¥–µ—è –¥–ª—è –≤–µ—á–µ—Ä–∞",
        "–î–µ—Ä–∂–∏—Ç–µ—Å—å –∑–∞ —Ä—É–∫–∏ –≤–æ –≤—Ä–µ–º—è –ø—Ä–æ–≥—É–ª–æ–∫"
      ],
      quality_time: [
        "–ó–∞–ø–ª–∞–Ω–∏—Ä—É–π—Ç–µ –≤–µ—á–µ—Ä —Ç–æ–ª—å–∫–æ –¥–ª—è –≤–∞—Å –¥–≤–æ–∏—Ö",
        "–û—Ç–∫–ª—é—á–∏—Ç–µ —Ç–µ–ª–µ—Ñ–æ–Ω—ã –∏ –ø—Ä–æ—Å—Ç–æ –ø–æ–≥–æ–≤–æ—Ä–∏—Ç–µ",
        "–ù–∞–π–¥–∏—Ç–µ –Ω–æ–≤–æ–µ —Ö–æ–±–±–∏, –∫–æ—Ç–æ—Ä—ã–º –º–æ–∂–µ—Ç–µ –∑–∞–Ω–∏–º–∞—Ç—å—Å—è –≤–º–µ—Å—Ç–µ"
      ],
      words_of_affirmation: [
        "–ß–∞—â–µ –≥–æ–≤–æ—Ä–∏—Ç–µ –∫–æ–º–ø–ª–∏–º–µ–Ω—Ç—ã –¥—Ä—É–≥ –¥—Ä—É–≥—É",
        "–û—Å—Ç–∞–≤–ª—è–π—Ç–µ –º–∏–ª—ã–µ –∑–∞–ø–∏—Å–∫–∏ —Å –ø—Ä–∏–∑–Ω–∞–Ω–∏—è–º–∏",
        "–ë–ª–∞–≥–æ–¥–∞—Ä–∏—Ç–µ –ø–∞—Ä—Ç–Ω–µ—Ä–∞ –∑–∞ –º–µ–ª–æ—á–∏"
      ],
      acts_of_service: [
        "–°–¥–µ–ª–∞–π—Ç–µ —á—Ç–æ-—Ç–æ –ø—Ä–∏—è—Ç–Ω–æ–µ –±–µ–∑ –ø—Ä–æ—Å—å–±—ã",
        "–ü—Ä–∏–≥–æ—Ç–æ–≤—å—Ç–µ –ª—é–±–∏–º–æ–µ –±–ª—é–¥–æ –ø–∞—Ä—Ç–Ω–µ—Ä–∞",
        "–ü–æ–º–æ–≥–∏—Ç–µ —Å –¥–µ–ª–∞–º–∏, –∫–æ—Ç–æ—Ä—ã–µ –ø–∞—Ä—Ç–Ω–µ—Ä –Ω–µ –ª—é–±–∏—Ç"
      ],
      receiving_gifts: [
        "–ü–æ–¥–∞—Ä–∏—Ç–µ —á—Ç–æ-—Ç–æ —Å–∏–º–≤–æ–ª–∏—á–Ω–æ–µ –∏ –∑–Ω–∞—á–∏–º–æ–µ",
        "–£–¥–∏–≤–∏—Ç–µ –º–∞–ª–µ–Ω—å–∫–∏–º —Å—é—Ä–ø—Ä–∏–∑–æ–º –±–µ–∑ –ø–æ–≤–æ–¥–∞",
        "–°–æ–∑–¥–∞–π—Ç–µ –ø–æ–¥–∞—Ä–æ–∫ —Å–≤–æ–∏–º–∏ —Ä—É–∫–∞–º–∏"
      ]
    };
    return dominantLanguages.map(([language]) => 
      suggestions[language][Math.floor(Math.random() * suggestions[language].length)]
    );
  }
  getMonthForm(months) {
    if (months === 1) return '–º–µ—Å—è—Ü';
    if (months >= 2 && months <= 4) return '–º–µ—Å—è—Ü–∞';
    return '–º–µ—Å—è—Ü–µ–≤';
  }
  getDayForm(days) {
    if (days === 1) return '–¥–µ–Ω—å';
    if (days >= 2 && days <= 4) return '–¥–Ω—è';
    return '–¥–Ω–µ–π';
  }
  getEventTimeContext(eventDate) {
    const hour = eventDate.getHours();
    if (hour < 12) return '—É—Ç—Ä–æ–º';
    if (hour < 17) return '–¥–Ω–µ–º';
    if (hour < 21) return '–≤–µ—á–µ—Ä–æ–º';
    return '–Ω–æ—á—å—é';
  }
  getStyleBasedIndex(length) {
    const { communicationStyle } = this.userContext;
    const random = Math.random();
    switch (communicationStyle) {
      case 'romantic':
        return Math.floor(random * Math.min(2, length)); // –ë–æ–ª–µ–µ —Ä–æ–º–∞–Ω—Ç–∏—á–Ω—ã–µ –≤–∞—Ä–∏–∞–Ω—Ç—ã
      case 'playful':
        return Math.floor(random * length); // –õ—é–±—ã–µ –≤–∞—Ä–∏–∞–Ω—Ç—ã
      case 'wise':
        return Math.floor((length - 1) * random); // –ë–æ–ª–µ–µ –º—É–¥—Ä—ã–µ –≤–∞—Ä–∏–∞–Ω—Ç—ã
      default:
        return Math.floor(random * length);
    }
  }
  recordInteraction(type, data = {}) {
    const interaction = {
      type,
      data,
      timestamp: new Date().toISOString()
    };
    this.userContext.lastInteractions.unshift(interaction);
    if (this.userContext.lastInteractions.length > 20) {
      this.userContext.lastInteractions = this.userContext.lastInteractions.slice(0, 20);
    }
    this.saveUserContext();
  }
  adaptCommunicationStyle(userReaction) {
    const { communicationStyle } = this.userContext;
    if (userReaction === 'positive') {
    } else if (userReaction === 'negative') {
      const styles = ['friendly', 'romantic', 'playful', 'wise'];
      const currentIndex = styles.indexOf(communicationStyle);
      const newIndex = (currentIndex + 1) % styles.length;
      this.userContext.communicationStyle = styles[newIndex];
      this.saveUserContext();
    }
  }
}
export default new SmartMascotService();

