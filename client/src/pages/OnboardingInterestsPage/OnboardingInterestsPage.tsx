import React, { useState, useEffect } from 'react';
import { useNavigate } from 'react-router-dom';
import { useSelector } from 'react-redux';
import { RootState } from '../../store';
import InterestSelector, { Interest, UserInterest } from '../../components/InterestSelector/InterestSelector';
import Button from '../../components/Button/Button';
import StaticMascot from '../../components/StaticMascot/StaticMascot';
import { useInteractiveMascot } from '../../hooks/useInteractiveMascot';
import interestService from '../../services/interest.service';
import congratsAnimation from '../../assets/greet.json';
import styles from './OnboardingInterestsPage.module.css';

interface MascotConfig {
  initialMessage: string;
  phrases: {
    error: string[];
    idle: string[];
    success: string[];
  };
}

const mascotConfig: MascotConfig = {
  initialMessage: '–†–∞—Å—Å–∫–∞–∂–∏—Ç–µ –Ω–∞—à–µ–º—É –ò–ò –æ –≤–∞—à–∏—Ö –∏–Ω—Ç–µ—Ä–µ—Å–∞—Ö! ü§ñ –ù–∞–∂–∏–º–∞–π—Ç–µ –Ω–∞ –∫–∞—Ä—Ç–æ—á–∫–∏ –¥–ª—è –≤—ã–±–æ—Ä–∞, –∞ –ø–æ–ª–∑—É–Ω–∫–æ–º —É–∫–∞–∑—ã–≤–∞–π—Ç–µ —Å—Ç–µ–ø–µ–Ω—å –æ—Ç–Ω–æ—à–µ–Ω–∏—è ‚ú®',
  phrases: { 
    error: ['–û–π, —á—Ç–æ-—Ç–æ –ø–æ—à–ª–æ –Ω–µ —Ç–∞–∫! –ü–æ–ø—Ä–æ–±—É–π—Ç–µ —Å–Ω–æ–≤–∞ üòÖ'], 
    idle: [
      '–í—ã–±–∏—Ä–∞–π—Ç–µ –¥–∞–∂–µ —Ç–æ, —á—Ç–æ –Ω–µ –Ω—Ä–∞–≤–∏—Ç—Å—è - –ò–ò —É—á—Ç—ë—Ç —ç—Ç–æ –ø—Ä–∏ –ø–æ–¥–±–æ—Ä–µ –º–µ—Å—Ç! üëé‚Üíüëç',
      '–ü–æ–ª–∑—É–Ω–æ–∫ –ø–æ–∫–∞–∑—ã–≤–∞–µ—Ç –≤–∞—à–µ –æ—Ç–Ω–æ—à–µ–Ω–∏–µ: ‚ù§Ô∏è –æ–±–æ–∂–∞—é, üëç –Ω—Ä–∞–≤–∏—Ç—Å—è, üòê –Ω–µ–π—Ç—Ä–∞–ª—å–Ω–æ, üëé –Ω–µ –Ω—Ä–∞–≤–∏—Ç—Å—è',
      '–ê–ª–≥–æ—Ä–∏—Ç–º —Å–æ–∑–¥–∞—ë—Ç –≤–∞—à —É–Ω–∏–∫–∞–ª—å–Ω—ã–π –ø—Ä–æ—Ñ–∏–ª—å –Ω–∞ –æ—Å–Ω–æ–≤–µ –≤—Å–µ—Ö –ø—Ä–µ–¥–ø–æ—á—Ç–µ–Ω–∏–π! üß†'
    ],
    success: ['–ü—Ä–µ–≤–æ—Å—Ö–æ–¥–Ω–æ! –ò–ò —Ç–µ–ø–µ—Ä—å –∑–Ω–∞–µ—Ç –≤–∞—à–∏ –≤–∫—É—Å—ã –∏ –∞–Ω—Ç–∏–ø–∞—Ç–∏–∏. –†–µ–∫–æ–º–µ–Ω–¥–∞—Ü–∏–∏ –±—É–¥—É—Ç —Ç–æ—á–Ω—ã–º–∏! üéØ‚ú®']
  }
};

const OnboardingInterestsPage: React.FC = () => {
  const [interests, setInterests] = useState<Interest[]>([]);
  const [selectedInterests, setSelectedInterests] = useState<UserInterest[]>([]);
  const [isLoading, setIsLoading] = useState(true);
  const [isSaving, setIsSaving] = useState(false);
  const [error, setError] = useState<string | null>(null);
  
  const navigate = useNavigate();
  const user = useSelector((state: RootState) => state.auth.user);
  
  const { mascotMessage, handleAvatarClick, handleInteraction, triggerError } = useInteractiveMascot(mascotConfig);

  useEffect(() => {
    loadInterests();
  }, []);

  const loadInterests = async () => {
    try {
      setIsLoading(true);
      setError(null);
      const data = await interestService.getAllInterests();
      setInterests(data);
    } catch (error) {
      console.error('Error loading interests:', error);
      
      let errorMessage = '–ù–µ —É–¥–∞–ª–æ—Å—å –∑–∞–≥—Ä—É–∑–∏—Ç—å –∏–Ω—Ç–µ—Ä–µ—Å—ã.';
      
      if (error.response?.status === 401) {
        errorMessage = '–ù–µ–æ–±—Ö–æ–¥–∏–º–æ –≤–æ–π—Ç–∏ –≤ —Å–∏—Å—Ç–µ–º—É';
      } else if (error.response?.status >= 500) {
        errorMessage = '–û—à–∏–±–∫–∞ —Å–µ—Ä–≤–µ—Ä–∞. –ü–æ–ø—Ä–æ–±—É–π—Ç–µ –ø–æ–∑–∂–µ.';
      } else if (!error.response) {
        errorMessage = '–ü—Ä–æ–±–ª–µ–º—ã —Å –ø–æ–¥–∫–ª—é—á–µ–Ω–∏–µ–º –∫ —Å–µ—Ä–≤–µ—Ä—É.';
      }
      
      setError(errorMessage + ' –ü–æ–ø—Ä–æ–±—É–π—Ç–µ –æ–±–Ω–æ–≤–∏—Ç—å —Å—Ç—Ä–∞–Ω–∏—Ü—É.');
      triggerError(errorMessage);
    } finally {
      setIsLoading(false);
    }
  };

  const getCategoryTitle = (category: string): string => {
    const titles: Record<string, string> = {
      food: '–ö—É–ª–∏–Ω–∞—Ä–∏—è –∏ –µ–¥–∞',
      cinema: '–ö–∏–Ω–æ –∏ —Å–µ—Ä–∏–∞–ª—ã',
      sport: '–°–ø–æ—Ä—Ç –∏ –∞–∫—Ç–∏–≤–Ω–æ—Å—Ç—å',
      music: '–ú—É–∑—ã–∫–∞',
      travel: '–ü—É—Ç–µ—à–µ—Å—Ç–≤–∏—è',
      art: '–ò—Å–∫—É—Å—Å—Ç–≤–æ –∏ –∫—É–ª—å—Ç—É—Ä–∞',
      hobby: '–•–æ–±–±–∏ –∏ —É–≤–ª–µ—á–µ–Ω–∏—è',
      nature: '–ü—Ä–∏—Ä–æ–¥–∞ –∏ —ç–∫–æ–ª–æ–≥–∏—è',
      books: '–ö–Ω–∏–≥–∏ –∏ —á—Ç–µ–Ω–∏–µ',
      games: '–ò–≥—Ä—ã',
      technology: '–¢–µ—Ö–Ω–æ–ª–æ–≥–∏–∏',
      fashion: '–ú–æ–¥–∞ –∏ —Å—Ç–∏–ª—å',
      cooking: '–ì–æ—Ç–æ–≤–∫–∞',
      fitness: '–§–∏—Ç–Ω–µ—Å',
      photography: '–§–æ—Ç–æ–≥—Ä–∞—Ñ–∏—è',
      dancing: '–¢–∞–Ω—Ü—ã',
      shopping: '–®–æ–ø–ø–∏–Ω–≥',
      animals: '–ñ–∏–≤–æ—Ç–Ω—ã–µ',
      cars: '–ê–≤—Ç–æ–º–æ–±–∏–ª–∏',
      crafts: '–†—É–∫–æ–¥–µ–ª–∏–µ',
      education: '–û–±—Ä–∞–∑–æ–≤–∞–Ω–∏–µ',
      volunteering: '–í–æ–ª–æ–Ω—Ç–µ—Ä—Å—Ç–≤–æ',
      other: '–î—Ä—É–≥–æ–µ'
    };
    return titles[category] || category;
  };

  const getCategoryEmoji = (category: string): string => {
    const emojis: Record<string, string> = {
      food: 'üçΩÔ∏è',
      cinema: 'üé¨',
      sport: '‚öΩ',
      music: 'üéµ',
      travel: '‚úàÔ∏è',
      art: 'üé®',
      hobby: 'üéØ',
      nature: 'üåø',
      books: 'üìö',
      games: 'üéÆ',
      technology: 'üíª',
      fashion: 'üëó',
      cooking: 'üë®‚Äçüç≥',
      fitness: 'üí™',
      photography: 'üì∏',
      dancing: 'üíÉ',
      shopping: 'üõçÔ∏è',
      animals: 'üêï',
      cars: 'üöó',
      crafts: 'üßµ',
      education: 'üéì',
      volunteering: 'ü§ù',
      other: 'üîç'
    };
    return emojis[category] || 'üìù';
  };

  const getCategoryDescription = (category: string): string => {
    const descriptions: Record<string, string> = {
      food: '–í–∞—à–∏ –ø—Ä–µ–¥–ø–æ—á—Ç–µ–Ω–∏—è –≤ –µ–¥–µ –∏ —Ä–µ—Å—Ç–æ—Ä–∞–Ω–∞—Ö',
      cinema: '–ñ–∞–Ω—Ä—ã –∫–∏–Ω–æ –∏ —Å–µ—Ä–∏–∞–ª–æ–≤, –∫–æ—Ç–æ—Ä—ã–µ –≤—ã –ª—é–±–∏—Ç–µ',
      sport: '–í–∏–¥—ã —Å–ø–æ—Ä—Ç–∞ –∏ —Ñ–∏–∑–∏—á–µ—Å–∫–æ–π –∞–∫—Ç–∏–≤–Ω–æ—Å—Ç–∏',
      music: '–ú—É–∑—ã–∫–∞–ª—å–Ω—ã–µ –∂–∞–Ω—Ä—ã –∏ –∏—Å–ø–æ–ª–Ω–∏—Ç–µ–ª–∏',
      travel: '–¢–∏–ø—ã –æ—Ç–¥—ã—Ö–∞ –∏ –ø—É—Ç–µ—à–µ—Å—Ç–≤–∏–π',
      art: '–ò—Å–∫—É—Å—Å—Ç–≤–æ, –º—É–∑–µ–∏, –≤—ã—Å—Ç–∞–≤–∫–∏',
      hobby: '–í–∞—à–∏ —É–≤–ª–µ—á–µ–Ω–∏—è –∏ —Ö–æ–±–±–∏',
      nature: '–ê–∫—Ç–∏–≤–Ω–æ—Å—Ç–∏ –Ω–∞ –ø—Ä–∏—Ä–æ–¥–µ',
      books: '–õ–∏—Ç–µ—Ä–∞—Ç—É—Ä–Ω—ã–µ –∂–∞–Ω—Ä—ã –∏ –∞–≤—Ç–æ—Ä—ã',
      games: '–í–∏–¥–µ–æ–∏–≥—Ä—ã –∏ –Ω–∞—Å—Ç–æ–ª—å–Ω—ã–µ –∏–≥—Ä—ã',
      technology: '–¢–µ—Ö–Ω–æ–ª–æ–≥–∏–∏ –∏ –≥–∞–¥–∂–µ—Ç—ã',
      fashion: '–°—Ç–∏–ª—å –∏ –º–æ–¥–∞',
      cooking: '–ì–æ—Ç–æ–≤–∫–∞ –∏ –∫—É–ª–∏–Ω–∞—Ä–∏—è',
      fitness: '–¢—Ä–µ–Ω–∏—Ä–æ–≤–∫–∏ –∏ —Ñ–∏—Ç–Ω–µ—Å',
      photography: '–§–æ—Ç–æ–≥—Ä–∞—Ñ–∏—è –∏ —Å—ä–µ–º–∫–∞',
      dancing: '–¢–∞–Ω—Ü—ã –∏ —Ö–æ—Ä–µ–æ–≥—Ä–∞—Ñ–∏—è',
      shopping: '–ü–æ–∫—É–ø–∫–∏ –∏ —à–æ–ø–ø–∏–Ω–≥',
      animals: '–î–æ–º–∞—à–Ω–∏–µ –∏ –¥–∏–∫–∏–µ –∂–∏–≤–æ—Ç–Ω—ã–µ',
      cars: '–ê–≤—Ç–æ–º–æ–±–∏–ª–∏ –∏ —Ç–µ—Ö–Ω–∏–∫–∞',
      crafts: '–†—É–∫–æ–¥–µ–ª–∏–µ –∏ —Ç–≤–æ—Ä—á–µ—Å—Ç–≤–æ',
      education: '–û–±—É—á–µ–Ω–∏–µ –∏ —Ä–∞–∑–≤–∏—Ç–∏–µ',
      volunteering: '–í–æ–ª–æ–Ω—Ç–µ—Ä—Å—Ç–≤–æ –∏ –ø–æ–º–æ—â—å',
      other: '–î—Ä—É–≥–∏–µ –∏–Ω—Ç–µ—Ä–µ—Å—ã'
    };
    return descriptions[category] || '–í—ã–±–µ—Ä–∏—Ç–µ –∏–Ω—Ç–µ—Ä–µ—Å—ã –≤ —ç—Ç–æ–π –∫–∞—Ç–µ–≥–æ—Ä–∏–∏';
  };

  const handleInterestToggle = (interestId: string, preference: 'love' | 'like' | 'neutral' | 'dislike') => {
    setSelectedInterests(prev => {
      const existing = prev.find(si => si.interest_id === interestId);
      
      if (preference === 'dislike') {
        // –£–¥–∞–ª—è–µ–º –∏–Ω—Ç–µ—Ä–µ—Å –∏–∑ —Å–ø–∏—Å–∫–∞
        return prev.filter(si => si.interest_id !== interestId);
      }
      
      if (existing) {
        // –û–±–Ω–æ–≤–ª—è–µ–º —Å—É—â–µ—Å—Ç–≤—É—é—â–∏–π
        return prev.map(si => 
          si.interest_id === interestId 
            ? { ...si, preference }
            : si
        );
      } else {
        // –î–æ–±–∞–≤–ª—è–µ–º –Ω–æ–≤—ã–π
        return [...prev, {
          interest_id: interestId,
          preference,
          intensity: 7 // –ü–æ —É–º–æ–ª—á–∞–Ω–∏—é "–Ω—Ä–∞–≤–∏—Ç—Å—è"
        }];
      }
    });
    handleInteraction();
  };

  const handleIntensityChange = (interestId: string, intensity: number) => {
    setSelectedInterests(prev =>
      prev.map(si =>
        si.interest_id === interestId
          ? { ...si, intensity }
          : si
      )
    );
  };

  const handleContinue = async () => {
    if (selectedInterests.length < 5) {
      triggerError('–í—ã–±–µ—Ä–∏—Ç–µ –º–∏–Ω–∏–º—É–º 5 –∏–Ω—Ç–µ—Ä–µ—Å–æ–≤');
      return;
    }

    if (!user?.id) {
      triggerError('–ü–æ–ª—å–∑–æ–≤–∞—Ç–µ–ª—å –Ω–µ –Ω–∞–π–¥–µ–Ω');
      navigate('/login');
      return;
    }

    try {
      setIsSaving(true);
      
      await interestService.setMultipleUserInterests(user.id, selectedInterests);
      
      // –ü–æ–∫–∞–∑—ã–≤–∞–µ–º —Å–æ–æ–±—â–µ–Ω–∏–µ –æ–± —É—Å–ø–µ—Ö–µ
      // –ò—Å–ø–æ–ª—å–∑—É–µ–º handleInteraction –¥–ª—è –ø–æ–∫–∞–∑–∞ —É—Å–ø–µ—à–Ω–æ–≥–æ —Å–æ–æ–±—â–µ–Ω–∏—è
      handleInteraction();
      
      setTimeout(() => {
        navigate('/dashboard');
      }, 1500);
      
    } catch (error) {
      console.error('Error saving interests:', error);
      
      let errorMessage = '–ù–µ —É–¥–∞–ª–æ—Å—å —Å–æ—Ö—Ä–∞–Ω–∏—Ç—å –∏–Ω—Ç–µ—Ä–µ—Å—ã.';
      
      if (error.response?.status === 401) {
        errorMessage = '–°–µ—Å—Å–∏—è –∏—Å—Ç–µ–∫–ª–∞. –í–æ–π–¥–∏—Ç–µ —Å–Ω–æ–≤–∞.';
        setTimeout(() => navigate('/login'), 2000);
      } else if (error.response?.status === 400) {
        errorMessage = '–ù–µ–∫–æ—Ä—Ä–µ–∫—Ç–Ω—ã–µ –¥–∞–Ω–Ω—ã–µ –∏–Ω—Ç–µ—Ä–µ—Å–æ–≤.';
      } else if (error.response?.status >= 500) {
        errorMessage = '–û—à–∏–±–∫–∞ —Å–µ—Ä–≤–µ—Ä–∞. –ü–æ–ø—Ä–æ–±—É–π—Ç–µ –ø–æ–∑–∂–µ.';
      } else if (!error.response) {
        errorMessage = '–ü—Ä–æ–±–ª–µ–º—ã —Å –ø–æ–¥–∫–ª—é—á–µ–Ω–∏–µ–º –∫ —Å–µ—Ä–≤–µ—Ä—É.';
      }
      
      triggerError(errorMessage + ' –ü–æ–ø—Ä–æ–±—É–π—Ç–µ –µ—â–µ —Ä–∞–∑.');
    } finally {
      setIsSaving(false);
    }
  };

  const handleSkip = () => {
    // –ü–æ–ª—å–∑–æ–≤–∞—Ç–µ–ª—å –º–æ–∂–µ—Ç –ø—Ä–æ–ø—É—Å—Ç–∏—Ç—å —ç—Ç–æ—Ç —à–∞–≥
    navigate('/dashboard');
  };

  if (isLoading) {
    return (
      <div className={styles.container}>
        <div className={styles.loadingState}>
          <div className={styles.loadingSpinner}></div>
          <p>–ó–∞–≥—Ä—É–∂–∞–µ–º –∏–Ω—Ç–µ—Ä–µ—Å—ã...</p>
        </div>
      </div>
    );
  }

  if (error) {
    return (
      <div className={styles.container}>
        <div className={styles.errorState}>
          <h3>–ü—Ä–æ–∏–∑–æ—à–ª–∞ –æ—à–∏–±–∫–∞</h3>
          <p>{error}</p>
          <Button type="primary" onClick={loadInterests}>
            –ü–æ–ø—Ä–æ–±–æ–≤–∞—Ç—å —Å–Ω–æ–≤–∞
          </Button>
        </div>
      </div>
    );
  }

  return (
    <div className={styles.container}>
      <div className={styles.mascotSection}>
        <StaticMascot 
          bubbleKey={mascotMessage} 
          message={mascotMessage} 
          animationData={congratsAnimation} 
          onAvatarClick={handleAvatarClick} 
        />
      </div>

      <div className={styles.content}>
        <div className={styles.progress}>
          <div className={styles.progressBar}>
            <div className={styles.progressFill} style={{ width: '100%' }}></div>
          </div>
          <span className={styles.progressText}>–®–∞–≥ 2 –∏–∑ 2</span>
        </div>

        <InterestSelector
          interests={interests}
          selectedInterests={selectedInterests}
          onInterestToggle={handleInterestToggle}
          onIntensityChange={handleIntensityChange}
          maxSelections={20}
          minSelections={5}
          groupByCategory={true}
        />

        <div className={styles.actions}>
          <Button 
            type="secondary" 
            onClick={handleSkip}
            disabled={isSaving}
          >
            –ü—Ä–æ–ø—É—Å—Ç–∏—Ç—å
          </Button>
          
          <Button 
            type="primary" 
            onClick={handleContinue}
            disabled={selectedInterests.length < 5 || isSaving}
            loading={isSaving}
          >
            {isSaving ? '–°–æ—Ö—Ä–∞–Ω—è–µ–º...' : '–ó–∞–≤–µ—Ä—à–∏—Ç—å —Ä–µ–≥–∏—Å—Ç—Ä–∞—Ü–∏—é'}
          </Button>
        </div>

        <div className={styles.helpText}>
          <p>
            üí° <strong>–°–æ–≤–µ—Ç:</strong> –í—ã–±–µ—Ä–∏—Ç–µ –∏–Ω—Ç–µ—Ä–µ—Å—ã —á–µ—Å—Ç–Ω–æ ‚Äî —ç—Ç–æ –ø–æ–º–æ–∂–µ—Ç –Ω–∞–º –ø–æ–¥–±–∏—Ä–∞—Ç—å –º–µ—Å—Ç–∞, 
            –∫–æ—Ç–æ—Ä—ã–µ –≤–∞–º –¥–µ–π—Å—Ç–≤–∏—Ç–µ–ª—å–Ω–æ –ø–æ–Ω—Ä–∞–≤—è—Ç—Å—è!
          </p>
        </div>
      </div>
    </div>
  );
};

export default OnboardingInterestsPage;
