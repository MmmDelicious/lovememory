import React, { useState, useEffect } from 'react';
import Lottie from 'lottie-react';
import Worker404 from '../../assets/Worker404.json';
import Worker500 from '../../assets/Worker500.json';
import styles from './ErrorDisplay.module.css';
const ErrorDisplay = ({ 
  errorCode = 404, 
  errorMessage = '–°—Ç—Ä–∞–Ω–∏—Ü–∞ –Ω–µ –Ω–∞–π–¥–µ–Ω–∞',
  errorDetails = null,
  onRetry = null,
  onGoHome = null 
}) => {
  const [showDetails, setShowDetails] = useState(false);
  const [animationData, setAnimationData] = useState(Worker404);
  useEffect(() => {
    if (errorCode >= 500) {
      setAnimationData(Worker500);
    } else {
      setAnimationData(Worker404);
    }
  }, [errorCode]);
  const getErrorTitle = () => {
    switch (errorCode) {
      case 404:
        return '–°—Ç—Ä–∞–Ω–∏—Ü–∞ –Ω–µ –Ω–∞–π–¥–µ–Ω–∞';
      case 403:
        return '–î–æ—Å—Ç—É–ø –∑–∞–ø—Ä–µ—â–µ–Ω';
      case 401:
        return '–ù–µ –∞–≤—Ç–æ—Ä–∏–∑–æ–≤–∞–Ω';
      case 500:
        return '–í–Ω—É—Ç—Ä–µ–Ω–Ω—è—è –æ—à–∏–±–∫–∞ —Å–µ—Ä–≤–µ—Ä–∞';
      case 502:
        return '–û—à–∏–±–∫–∞ —à–ª—é–∑–∞';
      case 503:
        return '–°–µ—Ä–≤–∏—Å –Ω–µ–¥–æ—Å—Ç—É–ø–µ–Ω';
      case 0:
        return '–ù–µ—Ç –ø–æ–¥–∫–ª—é—á–µ–Ω–∏—è –∫ –∏–Ω—Ç–µ—Ä–Ω–µ—Ç—É';
      default:
        return '–ü—Ä–æ–∏–∑–æ—à–ª–∞ –æ—à–∏–±–∫–∞';
    }
  };
  const getErrorDescription = () => {
    switch (errorCode) {
      case 404:
        return '–ó–∞–ø—Ä–∞—à–∏–≤–∞–µ–º–∞—è —Å—Ç—Ä–∞–Ω–∏—Ü–∞ –Ω–µ —Å—É—â–µ—Å—Ç–≤—É–µ—Ç –∏–ª–∏ –±—ã–ª–∞ –ø–µ—Ä–µ–º–µ—â–µ–Ω–∞.';
      case 403:
        return '–£ –≤–∞—Å –Ω–µ—Ç –ø—Ä–∞–≤ –¥–ª—è –¥–æ—Å—Ç—É–ø–∞ –∫ —ç—Ç–æ–º—É —Ä–µ—Å—É—Ä—Å—É.';
      case 401:
        return '–ù–µ–æ–±—Ö–æ–¥–∏–º–∞ –∞–≤—Ç–æ—Ä–∏–∑–∞—Ü–∏—è –¥–ª—è –¥–æ—Å—Ç—É–ø–∞ –∫ —ç—Ç–æ–º—É —Ä–µ—Å—É—Ä—Å—É.';
      case 500:
        return '–ù–∞ —Å–µ—Ä–≤–µ—Ä–µ –ø—Ä–æ–∏–∑–æ—à–ª–∞ –≤–Ω—É—Ç—Ä–µ–Ω–Ω—è—è –æ—à–∏–±–∫–∞. –ü–æ–ø—Ä–æ–±—É–π—Ç–µ –ø–æ–∑–∂–µ.';
      case 502:
        return '–°–µ—Ä–≤–µ—Ä –≤—Ä–µ–º–µ–Ω–Ω–æ –Ω–µ–¥–æ—Å—Ç—É–ø–µ–Ω. –ü–æ–ø—Ä–æ–±—É–π—Ç–µ –ø–æ–∑–∂–µ.';
      case 503:
        return '–°–µ—Ä–≤–∏—Å –≤—Ä–µ–º–µ–Ω–Ω–æ –Ω–µ–¥–æ—Å—Ç—É–ø–µ–Ω. –ü–æ–ø—Ä–æ–±—É–π—Ç–µ –ø–æ–∑–∂–µ.';
      case 0:
        return '–ü—Ä–æ–≤–µ—Ä—å—Ç–µ –ø–æ–¥–∫–ª—é—á–µ–Ω–∏–µ –∫ –∏–Ω—Ç–µ—Ä–Ω–µ—Ç—É –∏ –ø–æ–ø—Ä–æ–±—É–π—Ç–µ —Å–Ω–æ–≤–∞.';
      default:
        return '–ü—Ä–æ–∏–∑–æ—à–ª–∞ –Ω–µ–ø—Ä–µ–¥–≤–∏–¥–µ–Ω–Ω–∞—è –æ—à–∏–±–∫–∞. –ü–æ–ø—Ä–æ–±—É–π—Ç–µ –ø–æ–∑–∂–µ.';
    }
  };
  const getComfortingMessage = () => {
    const messages = [
      "–ù–µ –≤–æ–ª–Ω—É–π—Ç–µ—Å—å, —ç—Ç–æ –≤—Ä–µ–º–µ–Ω–Ω–æ! üîß",
      "–ú—ã —É–∂–µ —Ä–∞–±–æ—Ç–∞–µ–º –Ω–∞–¥ —Ä–µ—à–µ–Ω–∏–µ–º! ‚ö°",
      "–¢–∞–∫–æ–µ —Å–ª—É—á–∞–µ—Ç—Å—è, –Ω–æ –º—ã —Å–ø—Ä–∞–≤–∏–º—Å—è! üí™",
      "–ù–µ –ø–µ—Ä–µ–∂–∏–≤–∞–π—Ç–µ, —Å–∫–æ—Ä–æ –≤—Å—ë –∑–∞—Ä–∞–±–æ—Ç–∞–µ—Ç! ‚ú®",
      "–ú—ã –Ω–∞ –≤–∞—à–µ–π —Å—Ç–æ—Ä–æ–Ω–µ! üõ†Ô∏è",
      "–≠—Ç–æ –ø—Ä–æ—Å—Ç–æ –Ω–µ–±–æ–ª—å—à–∞—è —Ç–µ—Ö–Ω–∏—á–µ—Å–∫–∞—è –∑–∞–º–∏–Ω–∫–∞! üòä",
      "–ù–∞—à–∏ —Å–ø–µ—Ü–∏–∞–ª–∏—Å—Ç—ã —É–∂–µ –≤ –∫—É—Ä—Å–µ! üöÄ",
      "–°–∫–æ—Ä–æ –≤—Å—ë –±—É–¥–µ—Ç –∫–∞–∫ –ø—Ä–µ–∂–¥–µ! üåü"
    ];
    return messages[Math.floor(Math.random() * messages.length)];
  };
  return (
    <div className={styles.errorContainer}>
      <div className={styles.errorContent}>
        {}
        <div className={styles.animationContainer}>
          <Lottie 
            animationData={animationData} 
            loop={true}
            className={styles.lottieAnimation}
          />
        </div>
        {}
        <div className={styles.errorInfo}>
          <h1 className={styles.errorCode}>{errorCode}</h1>
          <h2 className={styles.errorTitle}>{getErrorTitle()}</h2>
          <p className={styles.errorDescription}>{getErrorDescription()}</p>
          {errorMessage && errorMessage !== getErrorTitle() && (
            <p className={styles.errorMessage}>{errorMessage}</p>
          )}
          {}
          <div className={styles.comfortingMessage}>
            <p>{getComfortingMessage()}</p>
          </div>
        </div>
        {}
        {errorDetails && (
          <div className={styles.errorDetails}>
            <button 
              className={styles.toggleDetails}
              onClick={() => setShowDetails(!showDetails)}
            >
              {showDetails ? '–°–∫—Ä—ã—Ç—å –¥–µ—Ç–∞–ª–∏' : '–ü–æ–∫–∞–∑–∞—Ç—å –¥–µ—Ç–∞–ª–∏ –æ—à–∏–±–∫–∏'}
            </button>
            {showDetails && (
              <div className={styles.detailsContent}>
                <pre className={styles.errorStack}>
                  {typeof errorDetails === 'string' 
                    ? errorDetails 
                    : JSON.stringify(errorDetails, null, 2)
                  }
                </pre>
              </div>
            )}
          </div>
        )}
        {}
        <div className={styles.actionButtons}>
          {onRetry && (
            <button className={styles.retryButton} onClick={onRetry}>
              –ü–æ–ø—Ä–æ–±–æ–≤–∞—Ç—å —Å–Ω–æ–≤–∞
            </button>
          )}
          {onGoHome && (
            <button className={styles.homeButton} onClick={onGoHome}>
              –ü–µ—Ä–µ–π—Ç–∏ –¥–æ–º–æ–π
            </button>
          )}
        </div>
      </div>
    </div>
  );
};
export default ErrorDisplay; 
