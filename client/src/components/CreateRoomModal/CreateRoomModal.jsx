import React, { useState } from 'react';
import PropTypes from 'prop-types';
import Modal from '../Modal/Modal';
import Button from '../Button/Button';
import styles from './CreateRoomModal.module.css';

const CreateRoomModal = ({ isOpen, onClose, onSubmit, gameType }) => {
  const [bet, setBet] = useState(10);
  const [error, setError] = useState('');

  const handleSubmit = () => {
    if (bet <= 0) {
      setError('–°—Ç–∞–≤–∫–∞ –¥–æ–ª–∂–Ω–∞ –±—ã—Ç—å –±–æ–ª—å—à–µ –Ω—É–ª—è.');
      return;
    }
    setError('');
    onSubmit({ bet });
  };

  const renderGameSpecificFields = () => {
    // –í –±—É–¥—É—â–µ–º –∑–¥–µ—Å—å –º–æ–∂–Ω–æ –±—É–¥–µ—Ç –¥–æ–±–∞–≤–ª—è—Ç—å –¥—Ä—É–≥–∏–µ –ø–æ–ª—è –¥–ª—è –¥—Ä—É–≥–∏—Ö –∏–≥—Ä.
    // –ù–∞–ø—Ä–∏–º–µ—Ä, –¥–ª—è —à–∞—Ö–º–∞—Ç –º–æ–∂–Ω–æ –¥–æ–±–∞–≤–∏—Ç—å –≤—ã–±–æ—Ä —Ü–≤–µ—Ç–∞ —Ñ–∏–≥—É—Ä –∏–ª–∏ –∫–æ–Ω—Ç—Ä–æ–ª—å –≤—Ä–µ–º–µ–Ω–∏.
    return (
      <div className={styles.fieldGroup}>
        <label htmlFor="bet-input" className={styles.label}>
          –í–∞—à–∞ —Å—Ç–∞–≤–∫–∞:
        </label>
        <div className={styles.inputWrapper}>
          <span className={styles.currencyIcon}>ü™ô</span>
          <input
            id="bet-input"
            type="number"
            value={bet}
            onChange={(e) => setBet(parseInt(e.target.value, 10))}
            className={styles.input}
            min="1"
            placeholder="–ù–∞–ø—Ä–∏–º–µ—Ä, 10"
          />
        </div>
        {error && <p className={styles.errorText}>{error}</p>}
      </div>
    );
  };

  return (
    <Modal isOpen={isOpen} onClose={onClose} title={`–°–æ–∑–¥–∞—Ç—å –∫–æ–º–Ω–∞—Ç—É: ${gameType}`}>
      <div className={styles.content}>
        {renderGameSpecificFields()}
        <div className={styles.actions}>
          <Button onClick={onClose} variant="secondary">
            –û—Ç–º–µ–Ω–∞
          </Button>
          <Button onClick={handleSubmit} variant="primary">
            –°–æ–∑–¥–∞—Ç—å
          </Button>
        </div>
      </div>
    </Modal>
  );
};

CreateRoomModal.propTypes = {
  isOpen: PropTypes.bool.isRequired,
  onClose: PropTypes.func.isRequired,
  onSubmit: PropTypes.func.isRequired,
  gameType: PropTypes.string.isRequired,
};

export default CreateRoomModal; 