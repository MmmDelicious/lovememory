import React, { useEffect, useState } from 'react';
import { GameSettingsProps } from './types';
import styles from './BaseSettings.module.css';

const QuizSettings: React.FC<GameSettingsProps> = ({
  onSettingsChange,
  initialSettings
}) => {
  const [gameFormat, setGameFormat] = useState(initialSettings.gameFormat || '1v1');
  const [category, setCategory] = useState(initialSettings.category || 'general');
  const [questionCount, setQuestionCount] = useState(initialSettings.questionCount || '15');
  const [isPrivate, setIsPrivate] = useState(initialSettings.isPrivate || false);

  const maxPlayers = gameFormat === '2v2' ? 4 : 2;

  useEffect(() => {
    onSettingsChange({
      maxPlayers,
      gameFormat,
      category,
      questionCount,
      isPrivate
    });
  }, [maxPlayers, gameFormat, category, questionCount, isPrivate, onSettingsChange]);

  return (
    <div>
      <div className={styles.field}>
        <label className={styles.label}>–§–æ—Ä–º–∞—Ç –∏–≥—Ä—ã</label>
        <div className={styles.radioGroup}>
          <div className={styles.radioOption}>
            <input
              type="radio"
              id="quiz-1v1"
              name="gameFormat"
              value="1v1"
              checked={gameFormat === '1v1'}
              onChange={e => setGameFormat(e.target.value)}
              className={styles.radioInput}
            />
            <label htmlFor="quiz-1v1" className={styles.radioLabel}>
              üéØ 1 –ø—Ä–æ—Ç–∏–≤ 1
            </label>
          </div>
          <div className={styles.radioOption}>
            <input
              type="radio"
              id="quiz-2v2"
              name="gameFormat"
              value="2v2"
              checked={gameFormat === '2v2'}
              onChange={e => setGameFormat(e.target.value)}
              className={styles.radioInput}
            />
            <label htmlFor="quiz-2v2" className={styles.radioLabel}>
              ‚öîÔ∏è –ö–æ–º–∞–Ω–¥—ã 2√ó2
            </label>
          </div>
        </div>
      </div>

      <div className={styles.field}>
        <label className={styles.label}>–ö–∞—Ç–µ–≥–æ—Ä–∏—è –≤–æ–ø—Ä–æ—Å–æ–≤</label>
        <select
          value={category}
          onChange={e => setCategory(e.target.value)}
          className={styles.select}
        >
          <option value="general">–û–±—â–∏–µ –∑–Ω–∞–Ω–∏—è</option>
          <option value="science">–ù–∞—É–∫–∞</option>
          <option value="history">–ò—Å—Ç–æ—Ä–∏—è</option>
          <option value="sports">–°–ø–æ—Ä—Ç</option>
          <option value="entertainment">–†–∞–∑–≤–ª–µ—á–µ–Ω–∏—è</option>
        </select>
      </div>

      <div className={styles.field}>
        <label className={styles.label}>–ö–æ–ª–∏—á–µ—Å—Ç–≤–æ –≤–æ–ø—Ä–æ—Å–æ–≤</label>
        <select
          value={questionCount}
          onChange={e => setQuestionCount(e.target.value)}
          className={styles.select}
        >
          <option value="10">10 –≤–æ–ø—Ä–æ—Å–æ–≤</option>
          <option value="15">15 –≤–æ–ø—Ä–æ—Å–æ–≤</option>
          <option value="20">20 –≤–æ–ø—Ä–æ—Å–æ–≤</option>
        </select>
      </div>

      <div className={styles.field}>
        <div className={styles.toggle}>
          <span className={styles.toggleLabel}>–ü—Ä–∏–≤–∞—Ç–Ω–∞—è –∏–≥—Ä–∞</span>
          <div 
            className={`${styles.toggleSwitch} ${isPrivate ? styles.active : ''}`}
            onClick={() => setIsPrivate(!isPrivate)}
          >
            <div className={styles.toggleKnob}></div>
          </div>
        </div>
      </div>

      <div className={styles.playersInfo}>
        <span className={styles.playersIcon}>üß†</span>
        <span className={styles.playersText}>
          {gameFormat === '2v2' ? '4 –∏–≥—Ä–æ–∫–∞ ‚Ä¢ –ö–æ–º–∞–Ω–¥—ã 2√ó2' : '2 –∏–≥—Ä–æ–∫–∞ ‚Ä¢ 1 –ø—Ä–æ—Ç–∏–≤ 1'}
        </span>
      </div>

      {gameFormat === '2v2' && (
        <div className={styles.warningText}>
          –í –∫–æ–º–∞–Ω–¥–Ω–æ–º —Ñ–æ—Ä–º–∞—Ç–µ –≤—ã–∏–≥—Ä–∞–≤—à–∞—è –∫–æ–º–∞–Ω–¥–∞ –¥–µ–ª–∏—Ç –ø—Ä–∏–∑ –ø–æ—Ä–æ–≤–Ω—É
        </div>
      )}
    </div>
  );
};

export default QuizSettings;
