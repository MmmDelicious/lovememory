"""
üß† Personality Engine - Deep Personality Model –¥–ª—è LoveMemory AI
–†–µ–∞–ª–∏–∑—É–µ—Ç –Ω–∞—É—á–Ω–æ –æ–±–æ—Å–Ω–æ–≤–∞–Ω–Ω—É—é –º–æ–¥–µ–ª—å "–ë–æ–ª—å—à–∞—è –ü—è—Ç—ë—Ä–∫–∞" (OCEAN)

–§–∞–∑–∞ 1.1: –ì–ª—É–±–æ–∫–∞—è –ú–æ–¥–µ–ª—å –õ–∏—á–Ω–æ—Å—Ç–∏ –ü–æ–ª—å–∑–æ–≤–∞—Ç–µ–ª—è
- Openness: –û—Ç–∫—Ä—ã—Ç–æ—Å—Ç—å –æ–ø—ã—Ç—É (0-1)
- Conscientiousness: –î–æ–±—Ä–æ—Å–æ–≤–µ—Å—Ç–Ω–æ—Å—Ç—å (0-1)  
- Extraversion: –≠–∫—Å—Ç—Ä–∞–≤–µ—Ä—Å–∏—è (0-1)
- Agreeableness: –î–æ–±—Ä–æ–∂–µ–ª–∞—Ç–µ–ª—å–Ω–æ—Å—Ç—å (0-1)
- Neuroticism: –ù–µ–≤—Ä–æ—Ç–∏–∑–º (0-1)
"""

import random
import numpy as np
from typing import Dict, List, Any
from dataclasses import dataclass

@dataclass
class PersonalityProfile:
    """–ü—Ä–æ—Ñ–∏–ª—å –ª–∏—á–Ω–æ—Å—Ç–∏ –ø–æ–ª—å–∑–æ–≤–∞—Ç–µ–ª—è –ø–æ –º–æ–¥–µ–ª–∏ OCEAN"""
    openness: float  # –û—Ç–∫—Ä—ã—Ç–æ—Å—Ç—å –æ–ø—ã—Ç—É (0-1)
    conscientiousness: float  # –î–æ–±—Ä–æ—Å–æ–≤–µ—Å—Ç–Ω–æ—Å—Ç—å (0-1)
    extraversion: float  # –≠–∫—Å—Ç—Ä–∞–≤–µ—Ä—Å–∏—è (0-1)
    agreeableness: float  # –î–æ–±—Ä–æ–∂–µ–ª–∞—Ç–µ–ª—å–Ω–æ—Å—Ç—å (0-1)
    neuroticism: float  # –ù–µ–≤—Ä–æ—Ç–∏–∑–º (0-1)
    
    def to_dict(self) -> Dict[str, float]:
        return {
            'openness': self.openness,
            'conscientiousness': self.conscientiousness,
            'extraversion': self.extraversion,
            'agreeableness': self.agreeableness,
            'neuroticism': self.neuroticism
        }
    
    @classmethod
    def from_dict(cls, data: Dict[str, float]) -> 'PersonalityProfile':
        return cls(**data)

class PersonalityEngine:
    """–î–≤–∏–∂–æ–∫ –¥–ª—è —Ä–∞–±–æ—Ç—ã —Å –º–æ–¥–µ–ª—å—é –ª–∏—á–Ω–æ—Å—Ç–∏ OCEAN"""
    
    def __init__(self):
        # –ê—Ä—Ö–µ—Ç–∏–ø—ã —Å –ø—Ä–µ–¥—Ä–∞—Å–ø–æ–ª–æ–∂–µ–Ω–Ω–æ—Å—Ç—è–º–∏ –∫ –æ–ø—Ä–µ–¥–µ–ª–µ–Ω–Ω—ã–º —á–µ—Ä—Ç–∞–º OCEAN
        self.archetype_personality_biases = {
            'ArtLovers': {
                'openness': (0.7, 0.95),  # –í—ã—Å–æ–∫–∞—è –æ—Ç–∫—Ä—ã—Ç–æ—Å—Ç—å
                'conscientiousness': (0.3, 0.7),
                'extraversion': (0.3, 0.8),
                'agreeableness': (0.5, 0.8),
                'neuroticism': (0.2, 0.6)
            },
            'Gamers': {
                'openness': (0.4, 0.8),
                'conscientiousness': (0.2, 0.6),
                'extraversion': (0.2, 0.7),  # –ú–æ–≥—É—Ç –±—ã—Ç—å –∏–Ω—Ç—Ä–æ–≤–µ—Ä—Ç–∞–º–∏
                'agreeableness': (0.3, 0.7),
                'neuroticism': (0.3, 0.7)
            },
            'Gourmets': {
                'openness': (0.5, 0.8),
                'conscientiousness': (0.4, 0.8),
                'extraversion': (0.4, 0.9),  # –°–æ—Ü–∏–∞–ª—å–Ω—ã
                'agreeableness': (0.5, 0.8),
                'neuroticism': (0.2, 0.5)
            },
            'Homebodies': {
                'openness': (0.2, 0.6),  # –ù–∏–∑–∫–∞—è –æ—Ç–∫—Ä—ã—Ç–æ—Å—Ç—å
                'conscientiousness': (0.5, 0.9),  # –í—ã—Å–æ–∫–∞—è –¥–æ–±—Ä–æ—Å–æ–≤–µ—Å—Ç–Ω–æ—Å—Ç—å
                'extraversion': (0.1, 0.5),  # –ò–Ω—Ç—Ä–æ–≤–µ—Ä—Ç—ã
                'agreeableness': (0.6, 0.9),
                'neuroticism': (0.3, 0.7)
            },
            'Fitness': {
                'openness': (0.3, 0.7),
                'conscientiousness': (0.6, 0.95),  # –û—á–µ–Ω—å –¥–∏—Å—Ü–∏–ø–ª–∏–Ω–∏—Ä–æ–≤–∞–Ω—ã
                'extraversion': (0.4, 0.8),
                'agreeableness': (0.4, 0.7),
                'neuroticism': (0.1, 0.4)  # –≠–º–æ—Ü–∏–æ–Ω–∞–ª—å–Ω–æ —Å—Ç–∞–±–∏–ª—å–Ω—ã
            },
            'Travelers': {
                'openness': (0.7, 0.95),  # –û—á–µ–Ω—å –æ—Ç–∫—Ä—ã—Ç—ã –∫ –Ω–æ–≤–æ–º—É
                'conscientiousness': (0.3, 0.7),
                'extraversion': (0.5, 0.9),  # –°–æ—Ü–∏–∞–ª—å–Ω—ã
                'agreeableness': (0.4, 0.8),
                'neuroticism': (0.2, 0.6)
            }
        }
        
        # –ê–∫—Ç–∏–≤–Ω–æ—Å—Ç–∏ –∏ –∏—Ö —Å–≤—è–∑—å —Å —á–µ—Ä—Ç–∞–º–∏ OCEAN
        self.activity_personality_bonuses = {
            # –û—Ç–∫—Ä—ã—Ç–æ—Å—Ç—å (Openness)
            'openness': {
                'high': [
                    '–¢–µ–∞—Ç—Ä', '–ú—É–∑–µ–π –∏—Å–∫—É—Å—Å—Ç–≤', '–ê—Ä—Ç-—Ö–∞—É—Å', '–•—É–¥–æ–∂–µ—Å—Ç–≤–µ–Ω–Ω–∞—è –ª–∏—Ç–µ—Ä–∞—Ç—É—Ä–∞',
                    '–ú–∞—Å—Ç–µ—Ä-–∫–ª–∞—Å—Å –ø–æ –∂–∏–≤–æ–ø–∏—Å–∏', '–í–∏–Ω–Ω–∞—è –¥–µ–≥—É—Å—Ç–∞—Ü–∏—è', '–≠–∫—Å–ø–µ—Ä–∏–º–µ–Ω—Ç–∞–ª—å–Ω–∞—è –∫—É—Ö–Ω—è',
                    '–ê–≤–∞–Ω–≥–∞—Ä–¥–Ω–æ–µ –∏—Å–∫—É—Å—Å—Ç–≤–æ', '–§–∏–ª–æ—Å–æ—Ñ—Å–∫–∏–µ –±–µ—Å–µ–¥—ã', '–ü—É—Ç–µ—à–µ—Å—Ç–≤–∏—è',
                    '–ù–µ–æ–±—ã—á–Ω—ã–µ –º–µ—Å—Ç–∞', '–ö—Ä–µ–∞—Ç–∏–≤–Ω—ã–µ —Ö–æ–±–±–∏'
                ],
                'low': [
                    '–î–æ–º–∞—à–Ω–∏–µ —Å–≤–∏–¥–∞–Ω–∏—è', '–¢—Ä–∞–¥–∏—Ü–∏–æ–Ω–Ω–∞—è –∫—É—Ö–Ω—è', '–ö–ª–∞—Å—Å–∏—á–µ—Å–∫–∏–µ —Ñ–∏–ª—å–º—ã',
                    '–ó–Ω–∞–∫–æ–º—ã–µ –º–µ—Å—Ç–∞', '–ü—Ä–æ—Å—Ç—ã–µ —É–¥–æ–≤–æ–ª—å—Å—Ç–≤–∏—è', '–£—é—Ç–Ω—ã–µ –∫–∞—Ñ–µ'
                ]
            },
            # –î–æ–±—Ä–æ—Å–æ–≤–µ—Å—Ç–Ω–æ—Å—Ç—å (Conscientiousness)
            'conscientiousness': {
                'high': [
                    '–ü–ª–∞–Ω–∏—Ä—É–µ–º—ã–µ –º–µ—Ä–æ–ø—Ä–∏—è—Ç–∏—è', '–¢–µ–∞—Ç—Ä', '–ú–∞—Å—Ç–µ—Ä-–∫–ª–∞—Å—Å—ã', '–û–±—Ä–∞–∑–æ–≤–∞—Ç–µ–ª—å–Ω—ã–µ —Ç—É—Ä—ã',
                    '–§–∏—Ç–Ω–µ—Å', '–ô–æ–≥–∞', '–ó–∞–ø–ª–∞–Ω–∏—Ä–æ–≤–∞–Ω–Ω—ã–µ —É–∂–∏–Ω—ã', '–ë—Ä–æ–Ω–∏—Ä–æ–≤–∞–Ω–∏–µ –∑–∞—Ä–∞–Ω–µ–µ'
                ],
                'low': [
                    '–°–ø–æ–Ω—Ç–∞–Ω–Ω—ã–µ –ø—Ä–æ–≥—É–ª–∫–∏', '–°—Ç—Ä–∏—Ç-—Ñ—É–¥', '–ë–∞—Ä—ã', '–ò–º–ø—Ä–æ–≤–∏–∑–∞—Ü–∏—è',
                    '–ü–æ—Å–ª–µ–¥–Ω–∏–µ –º–µ—Å—Ç–∞', '–°–ª—É—á–∞–π–Ω—ã–µ –æ—Ç–∫—Ä—ã—Ç–∏—è'
                ]
            },
            # –≠–∫—Å—Ç—Ä–∞–≤–µ—Ä—Å–∏—è (Extraversion)
            'extraversion': {
                'high': [
                    '–ö–æ–Ω—Ü–µ—Ä—Ç—ã', '–ö–ª—É–±—ã', '–ö–∞—Ä–∞–æ–∫–µ', '–í–µ—á–µ—Ä–∏–Ω–∫–∏', '–ì—Ä—É–ø–ø–æ–≤—ã–µ –∞–∫—Ç–∏–≤–Ω–æ—Å—Ç–∏',
                    '–û–±—â–µ—Å—Ç–≤–µ–Ω–Ω—ã–µ –º–µ—Ä–æ–ø—Ä–∏—è—Ç–∏—è', '–¢—É—Å–æ–≤–∫–∏', '–°–æ—Ü–∏–∞–ª—å–Ω—ã–µ –∏–≥—Ä—ã'
                ],
                'low': [
                    '–î–æ–º–∞—à–Ω–∏–µ —Å–≤–∏–¥–∞–Ω–∏—è', '–¢–∏—Ö–∏–µ –∫–∞—Ñ–µ', '–ü—Ä–æ–≥—É–ª–∫–∏ –Ω–∞ –ø—Ä–∏—Ä–æ–¥–µ',
                    '–ö–∞–º–µ—Ä–Ω—ã–µ –º–µ—Å—Ç–∞', '–ò–Ω—Ç–∏–º–Ω–∞—è –æ–±—Å—Ç–∞–Ω–æ–≤–∫–∞', '–ü–∞—Ä–∫', '–ë–∏–±–ª–∏–æ—Ç–µ–∫–∞'
                ]
            },
            # –î–æ–±—Ä–æ–∂–µ–ª–∞—Ç–µ–ª—å–Ω–æ—Å—Ç—å (Agreeableness) 
            'agreeableness': {
                'high': [
                    '–ö–æ–º–∞–Ω–¥–Ω—ã–µ –∏–≥—Ä—ã', '–í–æ–ª–æ–Ω—Ç–µ—Ä—Å—Ç–≤–æ', '–°–µ–º–µ–π–Ω—ã–µ —Ä–µ—Å—Ç–æ—Ä–∞–Ω—ã',
                    '–ö–æ–æ–ø–µ—Ä–∞—Ç–∏–≤–Ω—ã–µ –∞–∫—Ç–∏–≤–Ω–æ—Å—Ç–∏', '–ü–æ–º–æ—â—å –¥—Ä—É–≥–∏–º'
                ],
                'low': [
                    '–°–æ—Ä–µ–≤–Ω–æ–≤–∞—Ç–µ–ª—å–Ω—ã–µ –∏–≥—Ä—ã', '–ë–æ—É–ª–∏–Ω–≥', '–ö–∞—Ä—Ç–∏–Ω–≥', '–î–µ–±–∞—Ç—ã',
                    '–ò–Ω–¥–∏–≤–∏–¥—É–∞–ª—å–Ω—ã–µ –¥–æ—Å—Ç–∏–∂–µ–Ω–∏—è'
                ]
            },
            # –ù–µ–≤—Ä–æ—Ç–∏–∑–º (Neuroticism)
            'neuroticism': {
                'high': [
                    '–°–ø–∞', '–†–µ–ª–∞–∫—Å', '–ô–æ–≥–∞', '–ú–µ–¥–∏—Ç–∞—Ü–∏—è', '–¢–∏—Ö–∏–µ –º–µ—Å—Ç–∞',
                    '–ö–æ–º—Ñ–æ—Ä—Ç–Ω–∞—è –æ–±—Å—Ç–∞–Ω–æ–≤–∫–∞', '–ü—Ä–µ–¥—Å–∫–∞–∑—É–µ–º—ã–µ –∞–∫—Ç–∏–≤–Ω–æ—Å—Ç–∏'
                ],
                'low': [
                    '–≠–∫—Å—Ç—Ä–∏–º', '–ê–¥—Ä–µ–Ω–∞–ª–∏–Ω', '–®—É–º–Ω—ã–µ –º–µ—Å—Ç–∞', '–ö–≤–µ—Å—Ç—ã-—Ö–æ—Ä—Ä–æ—Ä—ã',
                    '–ü—Ä–∏–∫–ª—é—á–µ–Ω–∏—è', '–†–∏—Å–∫'
                ]
            }
        }
    
    def generate_personality_profile(self, archetype: str = None) -> PersonalityProfile:
        """
        –ì–µ–Ω–µ—Ä–∏—Ä—É–µ—Ç –ø—Ä–æ—Ñ–∏–ª—å –ª–∏—á–Ω–æ—Å—Ç–∏ –ø–æ –º–æ–¥–µ–ª–∏ OCEAN
        
        Args:
            archetype: –ê—Ä—Ö–µ—Ç–∏–ø –ø–æ–ª—å–∑–æ–≤–∞—Ç–µ–ª—è (–¥–ª—è –ø—Ä–µ–¥—Ä–∞—Å–ø–æ–ª–æ–∂–µ–Ω–Ω–æ—Å—Ç–µ–π)
        
        Returns:
            PersonalityProfile —Å —á–µ—Ä—Ç–∞–º–∏ OCEAN
        """
        if archetype and archetype in self.archetype_personality_biases:
            biases = self.archetype_personality_biases[archetype]
            
            # –ì–µ–Ω–µ—Ä–∏—Ä—É–µ–º —á–µ—Ä—Ç—ã —Å —É—á–µ—Ç–æ–º –ø—Ä–µ–¥—Ä–∞—Å–ø–æ–ª–æ–∂–µ–Ω–Ω–æ—Å—Ç–µ–π –∞—Ä—Ö–µ—Ç–∏–ø–∞
            openness = random.uniform(*biases['openness'])
            conscientiousness = random.uniform(*biases['conscientiousness'])
            extraversion = random.uniform(*biases['extraversion'])
            agreeableness = random.uniform(*biases['agreeableness'])
            neuroticism = random.uniform(*biases['neuroticism'])
        else:
            # –°–ª—É—á–∞–π–Ω–∞—è –≥–µ–Ω–µ—Ä–∞—Ü–∏—è (–Ω–æ—Ä–º–∞–ª—å–Ω–æ–µ —Ä–∞—Å–ø—Ä–µ–¥–µ–ª–µ–Ω–∏–µ)
            openness = np.clip(np.random.normal(0.5, 0.2), 0, 1)
            conscientiousness = np.clip(np.random.normal(0.5, 0.2), 0, 1)
            extraversion = np.clip(np.random.normal(0.5, 0.2), 0, 1)
            agreeableness = np.clip(np.random.normal(0.6, 0.2), 0, 1)  # –õ—é–¥–∏ –≤ —Å—Ä–µ–¥–Ω–µ–º –¥–æ–±—Ä–æ–∂–µ–ª–∞—Ç–µ–ª—å–Ω—ã
            neuroticism = np.clip(np.random.normal(0.4, 0.2), 0, 1)
        
        return PersonalityProfile(
            openness=round(openness, 3),
            conscientiousness=round(conscientiousness, 3),
            extraversion=round(extraversion, 3),
            agreeableness=round(agreeableness, 3),
            neuroticism=round(neuroticism, 3)
        )
    
    def calculate_activity_appeal(self, personality: PersonalityProfile, 
                                activity_tags: List[str]) -> float:
        """
        –í—ã—á–∏—Å–ª—è–µ—Ç –ø—Ä–∏–≤–ª–µ–∫–∞—Ç–µ–ª—å–Ω–æ—Å—Ç—å –∞–∫—Ç–∏–≤–Ω–æ—Å—Ç–∏ –¥–ª—è –¥–∞–Ω–Ω–æ–π –ª–∏—á–Ω–æ—Å—Ç–∏
        
        Args:
            personality: –ü—Ä–æ—Ñ–∏–ª—å –ª–∏—á–Ω–æ—Å—Ç–∏ OCEAN
            activity_tags: –¢–µ–≥–∏ –∞–∫—Ç–∏–≤–Ω–æ—Å—Ç–∏/–º–µ—Å—Ç–∞
            
        Returns:
            –ö–æ—ç—Ñ—Ñ–∏—Ü–∏–µ–Ω—Ç –ø—Ä–∏–≤–ª–µ–∫–∞—Ç–µ–ª—å–Ω–æ—Å—Ç–∏ (0-2.0)
        """
        appeal_score = 1.0  # –ë–∞–∑–æ–≤—ã–π —É—Ä–æ–≤–µ–Ω—å
        
        # –ü—Ä–æ–≤–µ—Ä—è–µ–º –∫–∞–∂–¥—É—é —á–µ—Ä—Ç—É –ª–∏—á–Ω–æ—Å—Ç–∏
        traits = {
            'openness': personality.openness,
            'conscientiousness': personality.conscientiousness,
            'extraversion': personality.extraversion,
            'agreeableness': personality.agreeableness,
            'neuroticism': personality.neuroticism
        }
        
        for trait_name, trait_value in traits.items():
            if trait_name in self.activity_personality_bonuses:
                trait_bonuses = self.activity_personality_bonuses[trait_name]
                
                # –í—ã—Å–æ–∫–∞—è —á–µ—Ä—Ç–∞
                if trait_value > 0.6:
                    high_activities = trait_bonuses.get('high', [])
                    for activity in high_activities:
                        if any(activity.lower() in tag.lower() or tag.lower() in activity.lower() 
                              for tag in activity_tags):
                            bonus_strength = (trait_value - 0.6) / 0.4  # 0-1
                            appeal_score += bonus_strength * 0.3  # –î–æ +0.3
                
                # –ù–∏–∑–∫–∞—è —á–µ—Ä—Ç–∞
                elif trait_value < 0.4:
                    low_activities = trait_bonuses.get('low', [])
                    for activity in low_activities:
                        if any(activity.lower() in tag.lower() or tag.lower() in activity.lower() 
                              for tag in activity_tags):
                            bonus_strength = (0.4 - trait_value) / 0.4  # 0-1
                            appeal_score += bonus_strength * 0.3  # –î–æ +0.3
        
        # –°–ø–µ—Ü–∏–∞–ª—å–Ω—ã–µ —Å–ª—É—á–∞–∏
        
        # –í—ã—Å–æ–∫–∏–π –Ω–µ–≤—Ä–æ—Ç–∏–∑–º - —à—Ç—Ä–∞—Ñ –∑–∞ —Å—Ç—Ä–µ—Å—Å–æ–≤—ã–µ –∞–∫—Ç–∏–≤–Ω–æ—Å—Ç–∏
        if personality.neuroticism > 0.7:
            stress_keywords = ['—ç–∫—Å—Ç—Ä–∏–º', '—Ö–æ—Ä—Ä–æ—Ä', '–∞–¥—Ä–µ–Ω–∞–ª–∏–Ω', '—à—É–º–Ω—ã–π', '—Ö–∞–æ—Ç–∏—á–Ω—ã–π']
            for keyword in stress_keywords:
                if any(keyword in tag.lower() for tag in activity_tags):
                    appeal_score -= 0.4
        
        # –í—ã—Å–æ–∫–∞—è –æ—Ç–∫—Ä—ã—Ç–æ—Å—Ç—å - –±–æ–Ω—É—Å –∑–∞ –Ω–æ–≤–∏–∑–Ω—É –∏ –Ω–µ–æ–±—ã—á–Ω–æ—Å—Ç—å
        if personality.openness > 0.7:
            novelty_keywords = ['–Ω–æ–≤—ã–π', '–Ω–µ–æ–±—ã—á–Ω—ã–π', '—ç–∫—Å–ø–µ—Ä–∏–º–µ–Ω—Ç–∞–ª—å–Ω—ã–π', '–∞–≤–∞–Ω–≥–∞—Ä–¥', '–∞—Ä—Ç']
            for keyword in novelty_keywords:
                if any(keyword in tag.lower() for tag in activity_tags):
                    appeal_score += 0.2
        
        # –ù–∏–∑–∫–∞—è –¥–æ–±—Ä–æ—Å–æ–≤–µ—Å—Ç–Ω–æ—Å—Ç—å - —à—Ç—Ä–∞—Ñ –∑–∞ –ø–ª–∞–Ω–∏—Ä–æ–≤–∞–Ω–∏–µ
        if personality.conscientiousness < 0.3:
            planning_keywords = ['–±—Ä–æ–Ω–∏—Ä–æ–≤–∞–Ω–∏–µ', '–∑–∞—Ä–∞–Ω–µ–µ', '–ø–ª–∞–Ω–∏—Ä–æ–≤–∞–Ω–∏–µ', '—Ä–∞—Å–ø–∏—Å–∞–Ω–∏–µ']
            for keyword in planning_keywords:
                if any(keyword in tag.lower() for tag in activity_tags):
                    appeal_score -= 0.2
        
        return max(0.1, min(2.0, appeal_score))
    
    def calculate_compatibility_score(self, personality1: PersonalityProfile, 
                                    personality2: PersonalityProfile) -> float:
        """
        –í—ã—á–∏—Å–ª—è–µ—Ç —Å–æ–≤–º–µ—Å—Ç–∏–º–æ—Å—Ç—å –¥–≤—É—Ö –ª–∏—á–Ω–æ—Å—Ç–µ–π (0-1)
        
        –û—Å–Ω–æ–≤–∞–Ω–æ –Ω–∞ –ø—Å–∏—Ö–æ–ª–æ–≥–∏—á–µ—Å–∫–∏—Ö –∏—Å—Å–ª–µ–¥–æ–≤–∞–Ω–∏—è—Ö —Å–æ–≤–º–µ—Å—Ç–∏–º–æ—Å—Ç–∏:
        - –°—Ö–æ–∂–µ—Å—Ç—å –≤ –Ω–µ–∫–æ—Ç–æ—Ä—ã—Ö —á–µ—Ä—Ç–∞—Ö –≤–∞–∂–Ω–∞ (—Ü–µ–Ω–Ω–æ—Å—Ç–∏)
        - –î–æ–ø–æ–ª–Ω–∏—Ç–µ–ª—å–Ω–æ—Å—Ç—å –≤ –¥—Ä—É–≥–∏—Ö –º–æ–∂–µ—Ç –±—ã—Ç—å –ø–æ–ª–µ–∑–Ω–∞
        
        Args:
            personality1: –ü–µ—Ä–≤–∞—è –ª–∏—á–Ω–æ—Å—Ç—å
            personality2: –í—Ç–æ—Ä–∞—è –ª–∏—á–Ω–æ—Å—Ç—å
            
        Returns:
            –°–æ–≤–º–µ—Å—Ç–∏–º–æ—Å—Ç—å –æ—Ç 0 –¥–æ 1
        """
        score = 0.0
        
        # –°—Ö–æ–∂–µ—Å—Ç—å –≤ —Ü–µ–Ω–Ω–æ—Å—Ç—è—Ö (Openness, Agreeableness) - –ø–ª—é—Å
        openness_similarity = 1 - abs(personality1.openness - personality2.openness)
        agreeableness_similarity = 1 - abs(personality1.agreeableness - personality2.agreeableness)
        
        score += openness_similarity * 0.25
        score += agreeableness_similarity * 0.25
        
        # –°—Ö–æ–∂–µ—Å—Ç—å –≤ —ç–º–æ—Ü–∏–æ–Ω–∞–ª—å–Ω–æ–π —Å—Ç–∞–±–∏–ª—å–Ω–æ—Å—Ç–∏ (–Ω–∏–∑–∫–∏–π –Ω–µ–≤—Ä–æ—Ç–∏–∑–º) - –ø–ª—é—Å
        both_stable = (1 - personality1.neuroticism) * (1 - personality2.neuroticism)
        score += both_stable * 0.2
        
        # –ë–∞–ª–∞–Ω—Å —ç–∫—Å—Ç—Ä–∞–≤–µ—Ä—Å–∏–∏ - –Ω–µ —Å–ª–∏—à–∫–æ–º –ø–æ—Ö–æ–∂–∏, –Ω–æ –∏ –Ω–µ –ø–æ–ª–Ω—ã–µ –ø—Ä–æ—Ç–∏–≤–æ–ø–æ–ª–æ–∂–Ω–æ—Å—Ç–∏
        extraversion_diff = abs(personality1.extraversion - personality2.extraversion)
        extraversion_balance = 1 - abs(extraversion_diff - 0.3) / 0.7  # –û–ø—Ç–∏–º—É–º –ø—Ä–∏ —Ä–∞–∑–Ω–∏—Ü–µ 0.3
        score += max(0, extraversion_balance) * 0.15
        
        # –•–æ—Ç—è –±—ã –æ–¥–∏–Ω –¥–æ–±—Ä–æ—Å–æ–≤–µ—Å—Ç–Ω—ã–π (–¥–ª—è –ø–ª–∞–Ω–∏—Ä–æ–≤–∞–Ω–∏—è –æ—Ç–Ω–æ—à–µ–Ω–∏–π)
        conscientiousness_coverage = max(personality1.conscientiousness, personality2.conscientiousness)
        score += conscientiousness_coverage * 0.15
        
        return max(0.0, min(1.0, score))
    
    def get_personality_description(self, personality: PersonalityProfile) -> Dict[str, str]:
        """
        –°–æ–∑–¥–∞–µ—Ç —á–µ–ª–æ–≤–µ–∫–æ—á–∏—Ç–∞–µ–º–æ–µ –æ–ø–∏—Å–∞–Ω–∏–µ –ª–∏—á–Ω–æ—Å—Ç–∏
        
        Args:
            personality: –ü—Ä–æ—Ñ–∏–ª—å –ª–∏—á–Ω–æ—Å—Ç–∏
            
        Returns:
            –°–ª–æ–≤–∞—Ä—å —Å –æ–ø–∏—Å–∞–Ω–∏—è–º–∏ –∫–∞–∂–¥–æ–π —á–µ—Ä—Ç—ã
        """
        descriptions = {}
        
        # Openness
        if personality.openness > 0.7:
            descriptions['openness'] = "–û—á–µ–Ω—å –æ—Ç–∫—Ä—ã—Ç(–∞) –∫ –Ω–æ–≤–æ–º—É –æ–ø—ã—Ç—É, –ª—é–±–∏—Ç –∏—Å–∫—É—Å—Å—Ç–≤–æ –∏ –Ω–µ–æ–±—ã—á–Ω—ã–µ –∏–¥–µ–∏"
        elif personality.openness > 0.3:
            descriptions['openness'] = "–£–º–µ—Ä–µ–Ω–Ω–æ –æ—Ç–∫—Ä—ã—Ç(–∞) –∫ –Ω–æ–≤–æ–º—É, –Ω–æ –ø—Ä–µ–¥–ø–æ—á–∏—Ç–∞–µ—Ç –∑–Ω–∞–∫–æ–º–æ–µ"
        else:
            descriptions['openness'] = "–ü—Ä–µ–¥–ø–æ—á–∏—Ç–∞–µ—Ç —Ç—Ä–∞–¥–∏—Ü–∏–æ–Ω–Ω–æ–µ –∏ –ø—Ä–æ–≤–µ—Ä–µ–Ω–Ω–æ–µ, –∫–æ–Ω—Å–µ—Ä–≤–∞—Ç–∏–≤–µ–Ω"
        
        # Conscientiousness
        if personality.conscientiousness > 0.7:
            descriptions['conscientiousness'] = "–û—á–µ–Ω—å –æ—Ä–≥–∞–Ω–∏–∑–æ–≤–∞–Ω(–∞) –∏ –¥–∏—Å—Ü–∏–ø–ª–∏–Ω–∏—Ä–æ–≤–∞–Ω(–∞), –ª—é–±–∏—Ç –ø–ª–∞–Ω–∏—Ä–æ–≤–∞—Ç—å"
        elif personality.conscientiousness > 0.3:
            descriptions['conscientiousness'] = "–£–º–µ—Ä–µ–Ω–Ω–æ –æ—Ä–≥–∞–Ω–∏–∑–æ–≤–∞–Ω(–∞), –±–∞–ª–∞–Ω—Å –ø–ª–∞–Ω–∏—Ä–æ–≤–∞–Ω–∏—è –∏ —Å–ø–æ–Ω—Ç–∞–Ω–Ω–æ—Å—Ç–∏"
        else:
            descriptions['conscientiousness'] = "–°–ø–æ–Ω—Ç–∞–Ω–µ–Ω(–∞) –∏ –≥–∏–±–æ–∫(–∞), –Ω–µ –ª—é–±–∏—Ç –∂–µ—Å—Ç–∫–∏–µ –ø–ª–∞–Ω—ã"
        
        # Extraversion
        if personality.extraversion > 0.7:
            descriptions['extraversion'] = "–≠–∫—Å—Ç—Ä–∞–≤–µ—Ä—Ç: —ç–Ω–µ—Ä–≥–∏—á–µ–Ω(–∞) –≤ –∫–æ–º–ø–∞–Ω–∏–∏, –ª—é–±–∏—Ç –æ–±—â–µ–Ω–∏–µ –∏ –≤–µ—á–µ—Ä–∏–Ω–∫–∏"
        elif personality.extraversion > 0.3:
            descriptions['extraversion'] = "–ê–º–±–∏–≤–µ—Ä—Ç: –∫–æ–º—Ñ–æ—Ä—Ç–Ω–æ –∫–∞–∫ –≤ –∫–æ–º–ø–∞–Ω–∏–∏, —Ç–∞–∫ –∏ –≤ –æ–¥–∏–Ω–æ—á–µ—Å—Ç–≤–µ"
        else:
            descriptions['extraversion'] = "–ò–Ω—Ç—Ä–æ–≤–µ—Ä—Ç: –ø—Ä–µ–¥–ø–æ—á–∏—Ç–∞–µ—Ç —É–µ–¥–∏–Ω–µ–Ω–∏–µ –∏ —Å–ø–æ–∫–æ–π–Ω—É—é –æ–±—Å—Ç–∞–Ω–æ–≤–∫—É"
        
        # Agreeableness  
        if personality.agreeableness > 0.7:
            descriptions['agreeableness'] = "–û—á–µ–Ω—å –¥–æ–±—Ä–æ–∂–µ–ª–∞—Ç–µ–ª—å–Ω—ã–π, —Å–∫–ª–æ–Ω–µ–Ω –∫ –∫–æ–º–ø—Ä–æ–º–∏—Å—Å–∞–º –∏ —Å–æ—Ç—Ä—É–¥–Ω–∏—á–µ—Å—Ç–≤—É"
        elif personality.agreeableness > 0.3:
            descriptions['agreeableness'] = "–£–º–µ—Ä–µ–Ω–Ω–æ –¥–æ–±—Ä–æ–∂–µ–ª–∞—Ç–µ–ª—å–Ω—ã–π, –º–æ–∂–µ—Ç –æ—Ç—Å—Ç–∞–∏–≤–∞—Ç—å —Å–≤–æ–∏ –∏–Ω—Ç–µ—Ä–µ—Å—ã"
        else:
            descriptions['agreeableness'] = "–°–æ—Ä–µ–≤–Ω–æ–≤–∞—Ç–µ–ª—å–Ω—ã–π, –ø—Ä—è–º–æ–ª–∏–Ω–µ–π–Ω—ã–π, –Ω–µ —Å–∫–ª–æ–Ω–µ–Ω –∫ –∫–æ–º–ø—Ä–æ–º–∏—Å—Å–∞–º"
        
        # Neuroticism
        if personality.neuroticism > 0.7:
            descriptions['neuroticism'] = "–≠–º–æ—Ü–∏–æ–Ω–∞–ª—å–Ω–æ —á—É–≤—Å—Ç–≤–∏—Ç–µ–ª—å–Ω—ã–π, —Å–∫–ª–æ–Ω–µ–Ω –∫ —Å—Ç—Ä–µ—Å—Å—É –∏ —Ç—Ä–µ–≤–æ–≥–∞–º"
        elif personality.neuroticism > 0.3:
            descriptions['neuroticism'] = "–£–º–µ—Ä–µ–Ω–Ω–æ —ç–º–æ—Ü–∏–æ–Ω–∞–ª–µ–Ω, —Å–ø—Ä–∞–≤–ª—è–µ—Ç—Å—è —Å–æ —Å—Ç—Ä–µ—Å—Å–æ–º"
        else:
            descriptions['neuroticism'] = "–≠–º–æ—Ü–∏–æ–Ω–∞–ª—å–Ω–æ —Å—Ç–∞–±–∏–ª–µ–Ω, —Å–ø–æ–∫–æ–π–Ω–æ –ø–µ—Ä–µ–Ω–æ—Å–∏—Ç —Å—Ç—Ä–µ—Å—Å"
        
        return descriptions

# –ì–ª–æ–±–∞–ª—å–Ω—ã–π —ç–∫–∑–µ–º–ø–ª—è—Ä –¥–≤–∏–∂–∫–∞ –ª–∏—á–Ω–æ—Å—Ç–∏
personality_engine = PersonalityEngine()

def main():
    """–î–µ–º–æ–Ω—Å—Ç—Ä–∞—Ü–∏—è —Ä–∞–±–æ—Ç—ã Personality Engine"""
    print("üß† –î–µ–º–æ–Ω—Å—Ç—Ä–∞—Ü–∏—è Personality Engine - OCEAN Model")
    
    # –¢–µ—Å—Ç–∏—Ä—É–µ–º –≥–µ–Ω–µ—Ä–∞—Ü–∏—é –ª–∏—á–Ω–æ—Å—Ç–µ–π –¥–ª—è —Ä–∞–∑–Ω—ã—Ö –∞—Ä—Ö–µ—Ç–∏–ø–æ–≤
    archetypes = ['ArtLovers', 'Gamers', 'Gourmets', 'Homebodies', 'Fitness', 'Travelers']
    
    for archetype in archetypes:
        print(f"\nüé≠ –ê—Ä—Ö–µ—Ç–∏–ø: {archetype}")
        personality = personality_engine.generate_personality_profile(archetype)
        
        print(f"  OCEAN: O={personality.openness:.2f} C={personality.conscientiousness:.2f} "
              f"E={personality.extraversion:.2f} A={personality.agreeableness:.2f} N={personality.neuroticism:.2f}")
        
        descriptions = personality_engine.get_personality_description(personality)
        for trait, desc in descriptions.items():
            print(f"  {trait.title()}: {desc}")
    
    # –¢–µ—Å—Ç–∏—Ä—É–µ–º —Å–æ–≤–º–µ—Å—Ç–∏–º–æ—Å—Ç—å
    print(f"\nüíï –¢–µ—Å—Ç–∏—Ä—É–µ–º —Å–æ–≤–º–µ—Å—Ç–∏–º–æ—Å—Ç—å –ª–∏—á–Ω–æ—Å—Ç–µ–π:")
    p1 = personality_engine.generate_personality_profile('ArtLovers')
    p2 = personality_engine.generate_personality_profile('ArtLovers')
    
    compatibility = personality_engine.calculate_compatibility_score(p1, p2)
    print(f"  ArtLovers + ArtLovers: {compatibility:.3f}")
    
    p3 = personality_engine.generate_personality_profile('Homebodies')
    compatibility2 = personality_engine.calculate_compatibility_score(p1, p3)
    print(f"  ArtLovers + Homebodies: {compatibility2:.3f}")
    
    # –¢–µ—Å—Ç–∏—Ä—É–µ–º –ø—Ä–∏–≤–ª–µ–∫–∞—Ç–µ–ª—å–Ω–æ—Å—Ç—å –∞–∫—Ç–∏–≤–Ω–æ—Å—Ç–µ–π
    print(f"\nüéØ –¢–µ—Å—Ç–∏—Ä—É–µ–º –ø—Ä–∏–≤–ª–µ–∫–∞—Ç–µ–ª—å–Ω–æ—Å—Ç—å –∞–∫—Ç–∏–≤–Ω–æ—Å—Ç–µ–π:")
    test_activities = [
        (['–¢–µ–∞—Ç—Ä', '–ö—É–ª—å—Ç—É—Ä–∞', '–ò—Å–∫—É—Å—Å—Ç–≤–æ'], "—Ç–µ–∞—Ç—Ä"),
        (['–≠–∫—Å—Ç—Ä–∏–º', '–ê–¥—Ä–µ–Ω–∞–ª–∏–Ω', '–•–æ—Ä—Ä–æ—Ä'], "—ç–∫—Å—Ç—Ä–∏–º"),
        (['–î–æ–º–∞—à–Ω–∏–π', '–£—é—Ç–Ω—ã–π', '–°–ø–æ–∫–æ–π–Ω—ã–π'], "–¥–æ–º–∞—à–Ω–µ–µ"),
        (['–§–∏—Ç–Ω–µ—Å', '–°–ø–æ—Ä—Ç', '–ó–¥–æ—Ä–æ–≤—å–µ'], "—Ñ–∏—Ç–Ω–µ—Å")
    ]
    
    test_personality = personality_engine.generate_personality_profile('ArtLovers')
    
    for tags, activity_name in test_activities:
        appeal = personality_engine.calculate_activity_appeal(test_personality, tags)
        print(f"  {activity_name}: {appeal:.2f}")
    
    print(f"\n‚úÖ Personality Engine –≥–æ—Ç–æ–≤ –∫ –∏—Å–ø–æ–ª—å–∑–æ–≤–∞–Ω–∏—é!")

if __name__ == "__main__":
    main()
